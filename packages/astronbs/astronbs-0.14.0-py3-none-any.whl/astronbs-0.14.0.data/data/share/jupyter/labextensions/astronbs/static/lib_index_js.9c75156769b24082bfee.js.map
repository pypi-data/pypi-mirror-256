{"version":3,"file":"lib_index_js.9c75156769b24082bfee.js","mappings":";;;;;;;;;;;;;;;;;AAA+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,kEAAgB;AACrC,uBAAuB,yDAAM;AAC7B;AACA;AACA;AACA,yBAAyB,kEAAgB;AACzC;AACA;AACA,kBAAkB,kEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kEAAgB;AAClC;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClC+D;AACD;AACJ;AACT;AACK;AACf;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAgB;AACxB,QAAQ,2DAAS;AACjB,QAAQ,wEAAmB;AAC3B,QAAQ,oEAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC,2CAA2C,6CAA6C;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC,2CAA2C,6CAA6C;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC,2CAA2C,6CAA6C;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC,2CAA2C,6CAA6C;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC,2CAA2C,6CAA6C;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC,2CAA2C,6CAA6C;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,oDAAU;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,gEAAS;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,QAAQ,oDAAU;AAClB;AACA;AACA,SAAS;AACT;AACA,mFAAmF,OAAO;AAC1F,SAAS;AACT;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://astronbs/./lib/handler.js","webpack://astronbs/./lib/index.js"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'astronbs', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { imageIcon } from '@jupyterlab/ui-components';\nimport { requestAPI } from './handler';\n/**\n * Initialization data for the astronbs extension.\n */\nconst plugin = {\n    id: 'astronbs:plugin',\n    autoStart: true,\n    optional: [\n        ISettingRegistry,\n        ILauncher,\n        IFileBrowserFactory,\n        IDocumentManager\n    ],\n    activate: (app, settingRegistry, launcher, fileBrowser, docManager) => {\n        console.log('JupyterLab extension astronbs is activated!');\n        if (settingRegistry) {\n            settingRegistry\n                .load(plugin.id)\n                .then(settings => {\n                console.log('astronbs settings loaded:', settings.composite);\n            })\n                .catch(reason => {\n                console.error('Failed to load settings for astronbs.', reason);\n            });\n        }\n        app.commands.addCommand('astronbs:reduction_template', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('reduction_template', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'astronbs.notebooks',\n                        nb_name: 'reduction_template.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Reduction Template'\n        });\n        app.commands.addCommand('astronbs:reprojection_template', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('reprojection_template', {\n                    body: JSON.stringify({ path: fileBrowser.defaultBrowser.model.path }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Reprojection Template'\n        });\n        app.commands.addCommand('astronbs:light_combo_template', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('light_combo_template', {\n                    body: JSON.stringify({ path: fileBrowser.defaultBrowser.model.path }),\n                    method: 'POST'\n                });\n                console.log('I am back in open2');\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Light Combo Template'\n        });\n        app.commands.addCommand('astronbs:folder_viewer_template', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('folder_viewer_template', {\n                    body: JSON.stringify({ path: fileBrowser.defaultBrowser.model.path }),\n                    method: 'POST'\n                });\n                console.log('I am back in open15');\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Folder Image Viewer'\n        });\n        app.commands.addCommand('astronbs:interactive_image_viewer', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('interactive_image_viewer', {\n                    body: JSON.stringify({ path: fileBrowser.defaultBrowser.model.path }),\n                    method: 'POST'\n                });\n                console.log('I am back in open11');\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Interactive Image Viewer'\n        });\n        app.commands.addCommand('astronbs:quick_color_template', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('quick_color_template', {\n                    body: JSON.stringify({ path: fileBrowser.defaultBrowser.model.path }),\n                    method: 'POST'\n                });\n                console.log('I am back in open11');\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Quick Color Image'\n        });\n        app.commands.addCommand('astronbs:color_mixer_template', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('color_mixer_template', {\n                    body: JSON.stringify({ path: fileBrowser.defaultBrowser.model.path }),\n                    method: 'POST'\n                });\n                console.log('I am back in open11');\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: 'Color Mixer'\n        });\n        app.commands.addCommand('astronbs:01_seeing_profile', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '01-viewer-seeing-template.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '01 Seeing Profile'\n        });\n        app.commands.addCommand('astronbs:02_comp_stars', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '02-comp-star-plotter-template.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '02 Comparison Stars'\n        });\n        app.commands.addCommand('astronbs:03_do_photometry', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '03-photometry-template.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '03 Do photometry'\n        });\n        app.commands.addCommand('astronbs:04_transform_pared_back', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '04-transform-pared-back.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '04 Transform photometry'\n        });\n        app.commands.addCommand('astronbs:05_relative_flux', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '05-relative-flux-calculation-template.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '05 Relative flux'\n        });\n        app.commands.addCommand('astronbs:06_transit_fitting', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '06-transit-fit-template.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '06 Transit fitting'\n        });\n        app.commands.addCommand('astronbs:07_transit_fitting_exotic', {\n            // code to run when this command is executed\n            execute: () => {\n                const reply = requestAPI('nb_make', {\n                    body: JSON.stringify({\n                        path: fileBrowser.defaultBrowser.model.path,\n                        package_path: 'stellarphot.notebooks.photometry',\n                        nb_name: '07-transit-fit-with-exotic.ipynb'\n                    }),\n                    method: 'POST'\n                });\n                console.log(reply);\n                reply.then(data => {\n                    console.log(data);\n                    if (docManager) {\n                        docManager.open(data['path']);\n                    }\n                });\n            },\n            icon: imageIcon,\n            label: '07 Transit fitting EXOTIC'\n        });\n        // Add item to launcher\n        if (launcher) {\n            launcher.add({\n                command: 'astronbs:reduction_template',\n                category: 'Astro',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:reprojection_template',\n                category: 'Astro',\n                rank: 10\n            });\n            launcher.add({\n                command: 'astronbs:light_combo_template',\n                category: 'Astro',\n                rank: 20\n            });\n            launcher.add({\n                command: 'astronbs:folder_viewer_template',\n                category: 'Astro',\n                rank: 30\n            });\n            launcher.add({\n                command: 'astronbs:interactive_image_viewer',\n                category: 'Astro',\n                rank: 40\n            });\n            launcher.add({\n                command: 'astronbs:quick_color_template',\n                category: 'Astro',\n                rank: 50\n            });\n            launcher.add({\n                command: 'astronbs:color_mixer_template',\n                category: 'Astro',\n                rank: 60\n            });\n            launcher.add({\n                command: 'astronbs:01_seeing_profile',\n                category: 'Photometry',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:02_comp_stars',\n                category: 'Photometry',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:03_do_photometry',\n                category: 'Photometry',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:04_transform_pared_back',\n                category: 'Photometry',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:05_relative_flux',\n                category: 'Photometry',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:06_transit_fitting',\n                category: 'Photometry',\n                rank: 0\n            });\n            launcher.add({\n                command: 'astronbs:07_transit_fitting_exotic',\n                category: 'Photometry',\n                rank: 0\n            });\n        }\n        requestAPI('get_example')\n            .then(data => {\n            console.log(data);\n        })\n            .catch(reason => {\n            console.error(`The astronbs server extension appears to be missing.\\n${reason}`);\n        });\n    }\n};\nexport default plugin;\n"],"names":[],"sourceRoot":""}