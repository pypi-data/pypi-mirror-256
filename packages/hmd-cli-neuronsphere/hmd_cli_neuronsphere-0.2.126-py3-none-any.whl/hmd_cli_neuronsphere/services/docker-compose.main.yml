version: "3.7"

services:
  proxy:
    container_name: hmd_proxy
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - "./nginx/neuronsphere.conf:/etc/nginx/nginx.conf:ro"
  gateway:
    container_name: hmd_gateway
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-img-local-gateway:${HMD_IMG_LOCAL_GATEWAY_VERSION:-stable}
    environment:
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_HOME: ${HMD_HOME}
      HMD_REGION: ${HMD_REGION}
    ports:
      - "8080:80"

  db:
    container_name: hmd_db
    environment:
      HMD_CUSTOMER_CODE: ${HMD_CUSTOMER_CODE}
      HMD_DID: ${HMD_DID:-aaa}
      HMD_ENVIRONMENT: local
      HMD_REGION: ${HMD_REGION}
    image: ${HMD_LOCAL_NS_CONTAINER_REGISTRY:-ghcr.io/neuronsphere}/hmd-postgres-base:${HMD_POSTGRES_BASE_VERSION:-stable}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - type: bind
        source: ${HMD_HOME}/postgresql/data
        target: /var/lib/postgresql/data
      - type: bind
        source: ${HMD_HOME}/postgresql/scripts/always-initdb.d
        target: /docker-entrypoint-initdb.d
