Index: examples/complete_example.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from pathlib import Path\n\nfrom camera_management.camera_management_app.manager_interface import ManagerApp\nfrom camera_management.frontends.basic_frontend import manager_interface\nfrom camera_management.tools.create_description import create_basic_description\n\n# To see the camera stream you have to run a viewing application in a second python process, since the OpenCV image viewer\n# only runs in the main thread\n\n# Create config files for all connected cams\ncreate_basic_description(Path(__file__).parent / \"data\" / \"type_configs\")\n\n# Start the manager backend with the path to your newly created .json config files, it will start on port 8090\nmanager_backend = ManagerApp(Path(__file__).parent / \"data\", autostart=True)\nmanager_backend.start()\n\n# Start the manager frontend with the IP and the port of the manager backend\nmanager_frontend = manager_interface(host=\"localhost\", port=8090, autostart=True)\n\n# Get all the available cams (all the cams connected to the manager device)\nprint(manager_frontend.get_available_cams())\n\n# Get info on which cam is actually configured, which cam thread is started on which port and more\nprint(manager_frontend.get_configured_cams())\n\n# get an actual camera interface by its port (ports start at 8091 counting upwards)\ncamera_interface = manager_frontend.get_interface_by_port(8091)\n\n# use the pre-processing methods available\n\n# set the image to black and white\ncamera_interface.bw = True\n\n# un-distort the image (only available if there are calibration values present in the .json config file on the backend)\n# this should result in a warning, since the above generated description files do not contain calibration values\ncamera_interface.undistort = True\n\n# rotate the image by +90 degrees\ncamera_interface.rotate = 90\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/examples/complete_example.py b/examples/complete_example.py
--- a/examples/complete_example.py	(revision 1626a468e0495e260b8fdaa8b265c6b8597ea49a)
+++ b/examples/complete_example.py	(date 1707740054116)
@@ -8,7 +8,7 @@
 # only runs in the main thread
 
 # Create config files for all connected cams
-create_basic_description(Path(__file__).parent / "data" / "type_configs")
+# create_basic_description(Path(__file__).parent / "data" / "type_configs")
 
 # Start the manager backend with the path to your newly created .json config files, it will start on port 8090
 manager_backend = ManagerApp(Path(__file__).parent / "data", autostart=True)
