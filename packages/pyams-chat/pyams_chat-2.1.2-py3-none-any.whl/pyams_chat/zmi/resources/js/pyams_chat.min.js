"use strict";void 0===window.$&&(window.$=MyAMS.$);const chat={unloadHandler:null,wsClient:null,accessToken:null,refreshToken:null,checkInterval:null,initChat:()=>{chat.initService()},initService:()=>{"serviceWorker"in navigator&&(navigator.serviceWorker.register("/chat-sw.js").then(e=>{console.debug(">>> Chat ServiceWorker registered with scope: ",e.scope)}).catch(e=>{console.debug(">>> Chat ServiceWorker registration failed: ",e)}),navigator.serviceWorker.addEventListener("message",chat.onServiceMessage),navigator.serviceWorker.ready.then(e=>{console.debug(">>> Service worker ready",e);const t=$("#user-notifications"),o=t.data("ams-notifications-endpoint"),i=t.data("ams-jwt-refresh-route"),n=`${t.data("ams-jwt-verify-route")}`;setTimeout(()=>{console.debug(`  > fetching URL ${n}...`),MyAMS.require("ajax","notifications").then(()=>{MyAMS.ajax.get(n).then(t=>{console.debug("  > got JWT token!",t),e.active.postMessage(JSON.stringify({action:"setConfig",config:{accessToken:t.accessToken,refreshToken:t.refreshToken,wsEndpoint:o,jwtRefreshRoute:i,jwtVerifyRoute:n}}))})})},100)}),setInterval(async()=>{await fetch("/chat-ping")},15e3))},onServiceMessage:e=>{console.debug(">>> received service message",e);const t=e.data,o=chat.services[t.action];"function"==typeof o&&o(t)},services:{notify:e=>{MyAMS.notifications.addNotification(e,!1)}}};window.MyAMS&&(MyAMS.config.modules.push("chat"),MyAMS.chat=chat,console.debug("MyAMS: chat module loaded..."));
