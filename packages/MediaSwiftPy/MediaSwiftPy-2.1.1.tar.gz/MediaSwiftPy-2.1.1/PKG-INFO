Metadata-Version: 2.1
Name: MediaSwiftPy
Version: 2.1.1
Summary: A PYTHON PACKAGE FOR VIDEO CONVERSION AND PROBING USING MediaSwiftPy FFPLAY AND FFPROBE.
Home-page: https://github.com/ROHIT-SINGH-1
Author: ROHIT SINGH
Author-email: rs3232263@gmail.com
License: GPL-3.0
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: license.txt

## [MediaSwiftPy] - EMPOWERING PYTHON WITH ADVANCED MULTIMEDIA OPERATIONS.

#### A POWERFUL PYTHON LIBRARY FOR SEAMLESS MULTIMEDIA OPERATIONS. MediaSwiftPy SIMPLIFIES COMPLEX TASKS, MAKING IT EASY TO INTEGRATE AND ENHANCE YOUR MULTIMEDIA APPLICATIONS. DIVE INTO THE FUTURE OF MEDIA HANDLING WITH MediaSwiftPy - YOUR GO-TO LIBRARY FOR 2024.

**KEY FEATURES:**
- **EFFORTLESS FILE CONVERSION .**
- **SEAMLESS MULTIMEDIA PLAYBACK .**
- **PROVIDING INFORMATION:**
  **MediaSwiftPy ALSO OFFERS DETAILED MULTIMEDIA INFORMATION RETRIEVAL .**


### EXPLORE THE CAPABILITIES OF MediaSwiftPy AND ELEVATE YOUR PYTHON MULTIMEDIA PROJECTS WITH SIMPLICITY AND EFFICIENCY.


[![License](https://img.shields.io/badge/LICENSE-GPLv3-blue.svg)](https://github.com/yourusername/MediaSwiftPy/blob/main/LICENSE)

**[MediaSwiftPy]**: **IS A PYTHON LIBRARY THAT PROVIDES A SIMPLIFIED INTERFACE FOR USING MediaSwiftPy AND FFPROBE, ALLOWING USERS TO PERFORM VIDEO CONVERSION AND PROBING WITH EASE.**

## SUPPORTED CODECS, FORMATS, AND FORMATS:

### VIDEO CODECS: `H264`, `LIBX264`, `MPEG4`, `VP9`, `AV1`, `HEVC`, `MJPEG`, '--MORE--'.
### AUDIO CODECS: `AAC`, `MP3`, `OPUS`, `VORBIS`, `PCM`, `ALAC`, `FLAC`,'--MORE--'.
### SUPPORTED FILE EXTENSIONS: VIDEO FORMATS - `.MP4`, `.AVI`, `.MKV`, `.WEBM`, `.MOV`, `.WMV`; AUDIO FORMATS - `.MP3`, `.AAC`, `.OGG`, `.WAV`, `.FLAC`, '--MORE--'.
### ADDITIONAL FFMPEG FORMATS: `MJPEG`, `FLV`, `MOV`, `WMV`, `HEVC`, `PCM`, `ALAC`, `FLAC`, `PRORES`, `DV`, '--MORE--'.

**[MediaSwiftPy]: A VERSATILE LIBRARY WITH MANY SUPPORT FOR AUDIO AND VIDEO CODECS, AS WELL AS MULTIPLE FILE FORMATS.**


## LIST THE AVAILABLE CODECS AND FORMATES:

`ffmpe = ffpe()`

- `ffmpe.formats()`
- `ffmpe.codecs()`

#### USE `.formate()` AND `.codecs()` METHOD.

## - PLAY MEDIA USING FFPL
#### THE `ffpl` CLASS PROVIDES METHODS FOR PLAY MEDIA FILES. HERE ARE SOME EXAMPLES OF HOW TO USE THESE METHODS:

```python
from MediaSwiftPy import ffpl

play = ffpl()
media_file = r"PATH_TO_INPUT_FILE"
play.play(media_file)
```

#### USE THE `.play()` METHOD TO PLAY MEDIA.

## - Using the `ffpr` class

#### THE `ffpr` CLASS PROVIDES METHODS FOR PROBING MEDIA FILES. HERE ARE SOME EXAMPLES OF HOW TO USE THESE METHODS:

```python
from MediaSwiftPy import ffpr

ffprobe = ffpr()

info = ffprobe.probe(r"PATH_TO_INPUT_FILE")
ffprobe.pretty(info)
```

#### IN THIS EXAMPLE, REPLACE `"PATH_TO_MEDIA_FILE"` WITH THE ACTUAL PATH TO YOUR MEDIA FILE. THE `.probe` METHOD RETURNS A DICTIONARY CONTAINING INFORMATION ABOUT THE MEDIA FILE. THE `.pretty`

## - USING THE `FFPE` CLASS

#### THE `FFPE` CLASS PROVIDES METHODS FOR VIDEO CONVERSION, LISTING CODECS, AND LISTING FORMATS. HERE ARE SOME EXAMPLES OF HOW TO USE THESE METHODS:

#### - EXAMPLE - CONVERT SINGLE VIDEO USING THIS: 
```python
from MediaSwiftPy import ffpe

ffmpe = ffpe()

ffmpe.convert(
    input_files=[r"PATH_TO_INPUT_FILE"],
    output_dir=r"PATH_TO_OUTPUT_FILE",
    cv='h264',        # VIDEO CODEC
    ca='aac',         # AUDIO CODEC
    s='1920x1080',    # VIDEO RESOLUTION
    hwaccel='cuda',   # HARDWARE ACCELERATION
    ar=44100,         # AUDIO SAMPLE RATE
    ac=2,             # AUDIO CHANNELS
    ba=192000,        # AUDIO BITRATE
    r=30,             # VIDEO FRAME RATE
    f='mp4',          # OUTPUT FORMAT
    preset='fast',    # PRESET FOR ENCODING
    bv=2000           # VIDEO BITRATE
)
```
#### - EXAMPEL - CONVERT MULTIPLE VIDEO USING THIS: 
- NOTE - ALWAYS SET INPUT FILE PATH IN SQUARE BRACKETS: 
```python
from MediaSwiftPy import ffpe

ffpe_instance = ffpe()

input_files = [
    r"PATH_TO_INPUT_FILE",
    r"PATH_TO_INPUT_FILE",
    # ADD MORE FILE PATHS AS NEEDED
]
output_directory = r"PATH_TO_OUTPUT_FILE"

ffpe_instance.convert_with_threading(
    file_list=input_files,
    output_dir=output_directory,
    cv="libx264",     # VIDEO CODEC
    ca="aac",         # AUDIO CODEC
    s="1280x720",     # VIDEO RESOLUTION
    ar=44100,         # AUDIO SAMPLE RATE
    ac=2,             # AUDIO CHANNELS 
    ba=128000,        # AUDIO BITRATE 
    r=30,             # VIDEO FRAME RATE 
    f="avi",          # OUTPUT FORMAT 
    preset="medium",  # PRESET FOR ENCODING 
    bv=1000000,       # VIDEO BITRATE 
)
```
#### - USE THE `.convert()` METHOD TO CONVERT MEDIA.
- NOTE - ALWAYS SET INPUT FILE PATH IN SQUARE BRACKETS: 


## - IMPORT CLASS:

- `from MediaSwiftPy import ffpe, ffpl, ffpr`
- `from MediaSwiftPy import *`

## - INSTALLATION:

```bash
pip install MediaSwiftPy
```
##  CONTACT
```
THIS PROJECT IS MAINTAINED BY [ROHIT SINGH]. FOR ANY QUERIES OR CONTRIBUTIONS TO CHECK MY GITHUB, PLEASE REACH OUT TO US. THANK YOU FOR USING 'MediaSwiftPy' PYTHON LIBRARY, NEW LIBRARY 2024.
```
