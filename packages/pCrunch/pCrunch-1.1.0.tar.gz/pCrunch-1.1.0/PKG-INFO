Metadata-Version: 2.1
Name: pCrunch
Version: 1.1.0
Summary: IO and Post Processing Interface for OpenFAST Results.
Author-email: NREL WISDEM Team <systems.engineering@nrel.gov>
Maintainer-email: Jake Nunemaker <jake.nunemaker@nrel.gov>, Nikhar Abbas <nikhar.abbas@nrel.gov>
License: Apache-2.0
Project-URL: Homepage, https://github.com/NREL/pCrunch
Keywords: wind,turbine,fatigue,ultimate,aeroelastic
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: fatpack
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pyyaml
Requires-Dist: ruamel.yaml
Requires-Dist: scipy
Provides-Extra: dev
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pylint; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: treon; extra == "test"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx_rtd_theme; extra == "docs"

pCrunch
=======

IO and Post Processing Interface for OpenFAST Results.

:Authors: Jake Nunemaker, Nikhar Abbas

Installation
------------

pCrunch is installable through pip via ``pip install pCrunch`` or conda, ``conda install pCrunch``.

Development Setup
-----------------

To set up pCrunch for development, follow these steps:

1. Download the latest version of `Miniconda <https://docs.conda.io/en/latest/miniconda.html>`_
   for the appropriate OS. Follow the remaining `steps <https://conda.io/projects/conda/en/latest/user-guide/install/index.html#regular-installation>`_
   for the appropriate OS version.
2. From the terminal, install pip by running: ``conda install -c anaconda pip``
3. Next, create a new environment for the project with the following.

    .. code-block:: console

        conda create -n pcrunch-dev

   To activate/deactivate the environment, use the following commands.

    .. code-block:: console

        conda activate pcrunch-dev
        conda deactivate pcrunch-dev

4. Clone the repository:
   ``git clone https://github.com/NREL/pCrunch.git``

5. Navigate to the top level of the repository
   (``<path-to-pCrunch>/pCrunch/``) and install pCrunch as an editable package
   with following commands.

    .. code-block:: console

       pip install -e '.[dev]'

6. (Preferred) Install the pre-commit hooks to autoformat code, ensuring
   consistent code style across the repository.

    .. code-block:: console

        pre-commit install

Examples
--------

For an up to date example of the core functionalities, see `example.ipynb`. More
examples coming soon.
