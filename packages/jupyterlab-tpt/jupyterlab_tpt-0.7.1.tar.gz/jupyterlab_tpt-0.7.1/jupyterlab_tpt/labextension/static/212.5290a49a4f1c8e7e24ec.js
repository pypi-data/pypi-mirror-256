"use strict";(self.webpackChunkjupyterlab_tpt=self.webpackChunkjupyterlab_tpt||[]).push([[212],{212:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o,l=n(308),c=n(122),a=n(714);!function(e){e[e.Get=0]="Get",e[e.Set=1]="Set",e[e.Unset=2]="Unset",e[e.Insert=3]="Insert",e[e.Remove=4]="Remove"}(o||(o={}));const s=e=>{if("string"==typeof e){const t=e;return 0===t.length?[]:t.split(".")}return e instanceof Array?e:(console.error(`xpath must be string or array, got ${e}`),[])},d=(e,t,n,l)=>{const{Get:c,Set:a,Unset:d,Insert:i,Remove:r}=o,m=(e,t,n,o)=>{if(0===n.length)return t===c?e:void 0;if(1===n.length){const[l]=n;switch(t){case c:return e[l];case a:return e[l]=o,o;case d:return l in e&&(delete e[l],!0);case i:if(l in e||(e[l]=[]),!(e[l]instanceof Array))return;{const t=e[l];return t.indexOf(o)<0?(t.push(o),o):void 0}case r:if(!(e[l]instanceof Array))return;const t=e[l],n=t.indexOf(o);return n>=0&&t.splice(n,1),o}}else{const[l,...s]=n;if(l in e){if(e[l]instanceof Object){const n=e[l];return m(n,t,s,o)}return}switch(t){case c:return;case a:e[l]={};const n=e[l];return m(n,t,s,o);case d:return;case i:return 0===s.length?(e[l]=[],m(e[l],t,s,o)):(e[l]={},m(e[l],t,s,o));case r:return}}},u=s(n);return m(e,t,u,l)},i=(e,t,n)=>{e instanceof a.Cell&&(e=e.model),t=s(t);const[l,...c]=t,i=e.getMetadata(l);return void 0===i?n:((e,t)=>d(e,o.Get,t,void 0))(i,c)},r=(e,t,n)=>{t=s(t);const[l,...c]=t,a=e.model.getMetadata(l);if(0===c.length){let t;return void 0!==a?(t=a,t=t.slice()):t=[],t.indexOf(n)<0?(t.push(n),e.model.setMetadata(l,t),n):void 0}{const t=a||{},s=((e,t,n)=>d(e,o.Insert,t,n))(t,c,n);return e.model.setMetadata(l,t),s}},m=(e,t,n)=>{t=s(t);const[l,...c]=t,a=e.model.getMetadata(l);if(void 0!==a){if(0===c.length){if(!(a instanceof Array))return;const t=a.slice(),o=t.indexOf(n);if(o<0)return;return t.splice(o,1),e.model.setMetadata(l,t),n}{const t=a,s=((e,t,n)=>d(e,o.Remove,t,n))(t,c,n);return e.model.setMetadata(l,t),s}}};var u,g=n(190);!function(e){e[e.All=0]="All",e[e.Active=1]="Active",e[e.Multiple=2]="Multiple"}(u||(u={}));const p=(e,t,n)=>{var o;const l=null===(o=e.currentWidget)||void 0===o?void 0:o.content;if(void 0===l)return;let c;if(t===u.All)c=l.widgets.slice();else{const e=l.activeCell;if(null===e)return;if(t===u.Active)c=[e];else{const{anchor:t,head:n}=l.getContiguousSelection();c=null===t||null===n?[e]:l.widgets.slice(t,n+1)}}c.forEach(n)},v="tools.sample_from",f=(e,t)=>{e instanceof a.CodeCell&&-1!==e.model.sharedModel.getSource().toLowerCase().indexOf(v)&&(t?m(e,"tags","remove-input"):r(e,"tags","remove-input"))},y=(e,t)=>{c.NotebookActions.changeCellType(e,"markdown");const n=null==e?void 0:e.activeCell;if(void 0===n)return;const o=null==n?void 0:n.model;if(void 0!==o){for(let e=4;e>0;e--)o.sharedModel.setSource(o.sharedModel.getSource().replace("#".repeat(e)+" ",""));0!==t&&o.sharedModel.setSource(`${"#".repeat(t)} ${o.sharedModel.getSource()}`)}},h={id:"jupyterlab-tpt:plugin",autoStart:!0,requires:[l.ICommandPalette,c.INotebookTracker,g.ISettingRegistry],activate:(e,t,n,o)=>{console.log("JupyterLab extension jupyterlab-tpt is activating");let l,[c]=[!1];l="convenience:show-settings",e.commands.addCommand(l,{label:"show settings",execute:()=>console.log(`Current settings: outline_selected_cells = ${c}`)}),t.addItem({command:l,category:"Convenience"}),l="convenience:hide-input-all-samples",e.commands.addCommand(l,{label:`hide input for all code cells that contain ${v}`,execute:()=>p(n,u.All,(e=>f(e,!0)))}),t.addItem({command:l,category:"convenience"}),e.commands.addKeyBinding({command:l,keys:["Alt Cmd 8"],selector:".jp-Notebook"}),l="convenience:show-input-all-samples",e.commands.addCommand(l,{label:`show input for all code cells that contain ${v}`,execute:()=>p(n,u.All,(e=>f(e,!1)))}),t.addItem({command:l,category:"convenience"}),e.commands.addKeyBinding({command:l,keys:["Ctrl Alt 8"],selector:".jp-Notebook"});for(let o=0;o<5;o++)l=`convenience:section-level-${o}`,e.commands.addCommand(l,{label:`active cell becomes section level ${o}`,execute:()=>{var e;const t=null===(e=n.currentWidget)||void 0===e?void 0:e.content;void 0!==t&&y(t,o)}}),t.addItem({command:l,category:"convenience"}),e.commands.addKeyBinding({command:l,keys:[`Ctrl ${o}`],selector:".jp-Notebook"});const a=e=>{"markdown"===e.model.type&&(e.rendered=!1)};function s(e){c=e.get("outline_selected_cells").composite,console.log(`tpt extension, outline_selected is read as ${c}`),(e=>{const t="outline-selected-cells-style",n=document.getElementById(t);if(!(e&&n||!e&&!n))if(e){console.log("injecting css for outlining selection");const e=(e,t)=>{const n=document.createElement("style");n.setAttribute("type","text/css"),n.id=t,n.appendChild(document.createTextNode(e)),document.body.appendChild(n)};e('/* stylelint-disable */\n\n/* multiple selection - might be better suited in courselevels ? */\n.jp-Notebook.jp-mod-commandMode .jp-Cell.jp-mod-selected {\n  background-image: url(\'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="4" height="4" viewBox="0 0 4 4"><path fill-opacity="0.4" d="M1 3h1v1H1V3zm2-2h1v1H3V1z"></path></svg>\') !important;\n}\n\n/* stylelint-enable */\n',t)}else console.log("removing css for outlining selection"),null==n||n.remove()})(c)}l="notebook:unrender-all-markdown",e.commands.addCommand(l,{label:"unrender all markdown cells",execute:()=>p(n,u.All,a)}),t.addItem({command:l,category:"convenience"}),e.commands.addKeyBinding({command:l,keys:["Ctrl E"],selector:".jp-Notebook.jp-mod-commandMode"}),e.commands.addKeyBinding({command:"notebook:render-all-markdown",keys:["Ctrl W"],selector:".jp-Notebook"}),e.commands.addKeyBinding({command:"notebook:move-cell-up",keys:["U"],selector:".jp-Notebook.jp-mod-commandMode"}),e.commands.addKeyBinding({command:"notebook:move-cell-down",keys:["D"],selector:".jp-Notebook.jp-mod-commandMode"}),l="convenience:toggle-raises-exception",e.commands.addCommand(l,{label:"toggle raises-exception for all selected cells",execute:()=>p(n,u.Multiple,(e=>((e,t)=>{i(e,"tags",t)?m(e,"tags",t):r(e,"tags",t)})(e,"raises-exception")))}),t.addItem({command:l,category:"convenience"}),e.commands.addKeyBinding({command:l,keys:["Alt Cmd 6"],selector:".jp-Notebook"}),l="convenience:set-raises-exception",e.commands.addCommand(l,{label:"set raises-exception for all selected cells",execute:()=>p(n,u.Multiple,(e=>r(e,"tags","raises-exception")))}),t.addItem({command:l,category:"convenience"}),e.commands.addKeyBinding({command:l,keys:["Ctrl Alt 6"],selector:".jp-Notebook"}),Promise.all([e.restored,o.load("jupyterlab-tpt:plugin")]).then((([e,t])=>{s(t),t.changed.connect(s)}))}}}}]);