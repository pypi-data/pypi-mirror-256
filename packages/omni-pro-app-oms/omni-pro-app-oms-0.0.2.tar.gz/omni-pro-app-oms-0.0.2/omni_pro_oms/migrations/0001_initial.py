# Generated by Django 5.0 on 2024-02-01 20:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified', verbose_name='updated by')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is active')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('base_url', models.CharField(max_length=255, verbose_name='Base URL')),
                ('auth', models.JSONField(blank=True, null=True, verbose_name='Auth')),
                ('token', models.JSONField(blank=True, null=True, verbose_name='Token')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configurations',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified', verbose_name='updated by')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is active')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('destination', models.CharField(max_length=255, verbose_name='Destination')),
                ('score', models.IntegerField(verbose_name='Score')),
                ('endpoint_url', models.CharField(max_length=255, verbose_name='Endpoint URL')),
                ('http_method', models.CharField(max_length=255, verbose_name='HTTP Method')),
                ('timeout', models.IntegerField(verbose_name='Timeout')),
                ('auth_type', models.CharField(max_length=255, verbose_name='Auth Type')),
                ('headers', models.JSONField(blank=True, null=True, verbose_name='Headers')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Operation',
                'verbose_name_plural': 'Operations',
            },
        ),
        migrations.CreateModel(
            name='OperationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified', verbose_name='updated by')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is active')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Code')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Operation Type',
                'verbose_name_plural': 'Operation Types',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified', verbose_name='updated by')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is active')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Code')),
                ('client_id', models.CharField(max_length=255, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=255, verbose_name='Client Secret')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified', verbose_name='updated by')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is active')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('error', 'Error'), ('success', 'Success')], default='waiting', max_length=256, verbose_name='Status')),
                ('body_src', models.JSONField(verbose_name='Body Source')),
                ('headers_src', models.JSONField(verbose_name='Headers Source')),
                ('params_src', models.JSONField(verbose_name='Params Source')),
                ('response_src', models.JSONField(verbose_name='Response Source')),
                ('url_src', models.CharField(max_length=256, verbose_name='URL Source')),
                ('body_dst', models.JSONField(verbose_name='Body Destination')),
                ('headers_dst', models.JSONField(verbose_name='Headers Destination')),
                ('params_dst', models.JSONField(verbose_name='Params Destination')),
                ('response_dst', models.JSONField(verbose_name='Response Destination')),
                ('url_dst', models.CharField(max_length=256, verbose_name='URL Destination')),
                ('time', models.IntegerField(verbose_name='Time (ms)')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('operation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='omni_pro_oms.operation', verbose_name='Operation')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('tenant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='omni_pro_oms.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='TenantOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified', verbose_name='updated by')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='is active')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config_tenant_operations', to='omni_pro_oms.config', verbose_name='Config ID')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('operation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operation_tenant_operations', to='omni_pro_oms.operation', verbose_name='Operation ID')),
                ('operation_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operation_type_tenant_operations', to='omni_pro_oms.operationtype', verbose_name='Operation Type ID')),
                ('tenant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_operations', to='omni_pro_oms.tenant', verbose_name='Tenant ID')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Tenant Operation',
                'verbose_name_plural': 'Tenant Operations',
            },
        ),
        migrations.AddConstraint(
            model_name='tenantoperation',
            constraint=models.UniqueConstraint(fields=('tenant_id', 'operation_type_id'), name='unique_tenant_operation_type'),
        ),
    ]
