# coding: utf-8

"""
    Qase.io TestOps API

    Qase TestOps API Specification.

    The version of the OpenAPI document: 1.0.0
    Contact: support@qase.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from qaseio.models.resultcreate_bulk import ResultcreateBulk

class TestResultcreateBulk(unittest.TestCase):
    """ResultcreateBulk unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultcreateBulk:
        """Test ResultcreateBulk
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultcreateBulk`
        """
        model = ResultcreateBulk()
        if include_optional:
            return ResultcreateBulk(
                results = [
                    qaseio.models.result_create.ResultCreate(
                        case_id = 56, 
                        case = qaseio.models.result_create_case.ResultCreate_case(
                            title = '', 
                            suite_title = '', 
                            description = '', 
                            preconditions = '', 
                            postconditions = '', 
                            layer = '', 
                            severity = '', 
                            priority = '', ), 
                        status = '', 
                        start_time = 0, 
                        time = 0, 
                        time_ms = 0, 
                        defect = True, 
                        attachments = [
                            ''
                            ], 
                        stacktrace = '', 
                        comment = '', 
                        param = {
                            'key' : ''
                            }, 
                        steps = [
                            qaseio.models.test_step_result_create.TestStepResultCreate(
                                position = 56, 
                                status = 'passed', 
                                comment = '', 
                                action = '', 
                                expected_result = '', 
                                data = '', )
                            ], 
                        author_id = 56, )
                    ]
            )
        else:
            return ResultcreateBulk(
                results = [
                    qaseio.models.result_create.ResultCreate(
                        case_id = 56, 
                        case = qaseio.models.result_create_case.ResultCreate_case(
                            title = '', 
                            suite_title = '', 
                            description = '', 
                            preconditions = '', 
                            postconditions = '', 
                            layer = '', 
                            severity = '', 
                            priority = '', ), 
                        status = '', 
                        start_time = 0, 
                        time = 0, 
                        time_ms = 0, 
                        defect = True, 
                        attachments = [
                            ''
                            ], 
                        stacktrace = '', 
                        comment = '', 
                        param = {
                            'key' : ''
                            }, 
                        steps = [
                            qaseio.models.test_step_result_create.TestStepResultCreate(
                                position = 56, 
                                status = 'passed', 
                                comment = '', 
                                action = '', 
                                expected_result = '', 
                                data = '', )
                            ], 
                        author_id = 56, )
                    ],
        )
        """

    def testResultcreateBulk(self):
        """Test ResultcreateBulk"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
