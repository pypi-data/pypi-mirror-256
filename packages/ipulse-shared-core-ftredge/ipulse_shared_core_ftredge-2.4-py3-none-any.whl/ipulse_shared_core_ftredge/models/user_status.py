from pydantic import BaseModel, EmailStr , Field, root_validator
from datetime import datetime , date
from dateutil.relativedelta import relativedelta
from typing import Set, Optional, Dict, Any, Annotated
import uuid
from . import pulse_enums as enums

CLASS_VERSION = 1.1
CLASS_VERSION_AUTHOR="Russlan Ramdowar;russlan@ftredge.com"
CLASS_VERSION_DATE=datetime(2024, 1, 16, 20, 45)

DOMAIN="user"
OBJ_REF = "usrsttus"
class UserStatus(BaseModel):
    schema_version: float = Field(default=CLASS_VERSION, description="Version of this Class == version of DB Schema") #User can Read only
    # uid: str = Field(frozen=True, description="Generated by Firebase Auth") #User can Read only
    # puid:str = Field(default_factory=lambda: f"{DOMAIN}{OBJ_REF}{datetime.utcnow().strftime('%Y%m%d%H%M')}{uuid.uuid4().hex[:8]}".lower(),
    #                   frozen=True, 
    #                   description="Generated Automatically by default_factory") #User can Read only
    
    iam_groups: Set[str] = Field(default_factory=lambda:{"pulseroot__authuser_open"}, description="Default Group for all authenticated Pulse users") #User can Read only
    sbscrptn_plan: str=Field(default_factory=lambda:"subscription_free", description="Subscription Plan ") #User can Read only
    sbscrptn_status: str=Field(default_factory=lambda:"active", description="Subscription Status") #User can Read only
    sbscrptn_start_date: datetime=Field(default_factory=lambda:datetime.utcnow(), description="Subscription Start Date") #User can Read only
    sbscrptn_end_date: datetime=Field(default_factory=lambda:datetime.utcnow()+relativedelta(years=1) , description="Subscription End Date") #User can Read only
    sbscrptn_insight_credits: int= Field(default_factory=lambda:7, description="Depends on Subscription Plan, Set Amount udated at Regular Intervals or at Regular Time") #User can Read only
    sbscrptn_ins_crdts_updtd_since_datetime: datetime=Field(default_factory=lambda:datetime.utcnow(), description="Subscription Start Date") #User can Read only #User can Read only #User can Read only
    extra_insigth_credits: int= Field(default_factory=lambda:0, description="If user purchased extra Insigth Credits they shouldn't Expire") #User can Read only
    payment_ref_uids: Optional[Set[str]] = None #User can Read only
    
    creat_date: datetime #User can Read only
    creat_by_user: str #User can Read only / Ideally shouldn't be able to see even
    updt_date: datetime #User can Read only / Ideally shouldn't be able to see even
    updt_by_user: str #User can Read only / Ideally shouldn't be able to see even
    
  
            
    class Config:
        extra = "forbid"