"""
    Service to send information through webhooks
"""
from discord_webhook import DiscordWebhook, DiscordEmbed


class Webhook:
    """
        Webhook class
    """
    _allowed_mentions = {}
    _content = ""
    _webhook_url = ""

    def define_webhook_url(self, webhook_url):
        """
            Define webhook url which the message will be sent on

            Args:
                webhook_url (str): URL given by Discord Webhook
        """
        self._webhook_url = webhook_url

    def define_mentions(self, users) -> None:
        """
            Define the user you allow to mention with the webhook, without it you cannot tag users

            Args:
                users (list): List of users with the following format ["userId", "userId"]
        """
        self._allowed_mentions = {"users": users}

    def define_content(self, content) -> None:
        """
            Used to display a message before the block generated by the webhook

            Args:
                content (str): A string or someone to tag with the following format <@idUserToTag>
        """
        self._content = content

    def webhook_instance(self) -> DiscordWebhook:
        """
            Webhook instance
        """
        return DiscordWebhook(
            url=self._webhook_url,
            rate_limit_retry=True,
            content=self._content,
            allowed_mentions=self._allowed_mentions
        )

    def send(self, title, description, author, color="FE1B00", url="") -> None:
        """
            Send a message in Discord

            Args:
                title (str): Title of the message
                description (str): Message to display
                author (str): The author of the message
                color (str, optional): color to display on the left border
                url (str, optional): URL to redirect on click
        """
        disc_webhook = self.webhook_instance()
        embed = DiscordEmbed(
            title=title,
            description=description,
            color=color,
            url=url
        )

        embed.set_author(name=author)

        disc_webhook.add_embed(embed)
        disc_webhook.execute(remove_embeds=True)
