[project]
name = "gimli.units"
requires-python = ">=3.10"
description = "An object-oriented Python interface to udunits"
keywords = [
    "earth science",
    "model coupling",
    "unit conversion",
    "units",
]
authors = [
    { email = "eric.hutton@colorado.edu" },
    { name = "Eric Hutton" },
]
maintainers = [
    { email = "eric.hutton@colorado.edu" },
    { name = "Eric Hutton" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "importlib-resources; python_version < '3.12'",
    "numpy",
]
dynamic = [
    "readme",
    "version",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "nox",
]
testing = [
    "hypothesis",
    "pytest",
    "pytest-cov",
]

[project.urls]
Changelog = "https://github.com/csdms/gimli/blob/master/CHANGES.rst"
Documentation = "https://gimli.readthedocs.io/"
Homepage = "https://github.com/csdms/gimli"
Repository = "https://github.com/csdms/gimli"

[project.scripts]
gimli = "gimli._main:main"

[build-system]
requires = [
    "cython",
    "numpy",
    "setuptools",
    "wheel",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic.readme]
file = "README.md"
content-type = "text/markdown"

[tool.setuptools.dynamic.version]
attr = "gimli._version.__version__"

[tool.setuptools.package-data]
gimli = [
    "data/udunits/*.xml*",
]

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.cibuildwheel]
build = "cp310-* cp311-* cp312-*"
skip = "*-win32*"
archs = "x86_64,aarch64,arm64,AMD64,x86"
before-build = [
    "cd extern/udunits-2.2.28",
    "mkdir -p m4",
    "autoreconf -fvi",
    "./configure --disable-static --enable-shared --prefix=/usr/local",
    "make",
    "make install",
]
test-requires = [
    "hypothesis",
    "pytest",
]
test-command = "pytest {package}/tests"
overrides = [
	{ select = "*-musllinux*", before-all = "apk add flex libtool texinfo" },
]

[tool.cibuildwheel.linux]
before-all = "yum install -y flex libtool texinfo"

[tool.cibuildwheel.macos]
before-all = "brew install automake libtool texinfo"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
before-all = [
    "cd {package}\\extern\\expat-2.6.0",
    "cmake -S . -DCMAKE_INSTALL_PREFIX={package}\\_inst",
    "cmake --build . --config Release",
    "cmake --build . --config Release --target install",
    "set LIB=%LIBRARY_LIB%;{package}\\_inst\\lib;%LIB%",
    "set LIBPATH=%LIBRARY_LIB%;{package}\\_inst\\lib;%LIBPATH%",
    "set INCLUDE={package}\\_inst\\include;%INCLUDE%",
    "cd {package}\\extern\\udunits-2.2.28",
    "set CFLAGS=\"-I{package}\\_inst\\include\"",
    "cmake -S . -DCMAKE_INSTALL_PREFIX={package}\\_inst -D EXPAT_INCLUDE_DIR={package}\\_inst\\include\\expat.h",
    "cmake --build . --config Release --target libudunits2",
    "cmake --build . --config Release --target install",
]
repair-wheel-command = "delvewheel repair --add-path=_inst\\bin -w {dest_dir} {wheel}"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 88

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0.0rc1"
testpaths = [
    "tests",
]
norecursedirs = [
    ".*",
    "*.egg*",
    "build",
    "dist",
]
addopts = [
    "--ignore=bmi_tester/bootstrap",
    "--ignore=bmi_tester/tests",
    "--tb=native",
    "--strict-markers",
    "--durations=16",
    "--doctest-modules",
    "-vvv",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ALLOW_UNICODE",
]

[tool.zest-releaser]
tag-format = "v{version}"
python-file-with-version = "src/gimli/_version.py"
