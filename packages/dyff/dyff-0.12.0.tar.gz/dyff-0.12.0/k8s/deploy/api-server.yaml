apiVersion: v1
kind: ConfigMap
metadata:
  name: api-server
  labels:
    app: api-server
    component: configuration
data:
  DYFF_API__AUTH__BACKEND: dyff.api.backend.mongodb.auth.MongoDBAuthBackend
  DYFF_API__QUERY__BACKEND: dyff.api.backend.mongodb.query.MongoDBQueryBackend
  DYFF_API__COMMAND__BACKEND: dyff.api.backend.kafka.command.KafkaCommandBackend
  DYFF_KAFKA__CONFIG__BOOTSTRAP_SERVERS: dyff-kafka-bootstrap:9092
  DYFF_KAFKA__TOPICS__WORKFLOWS_EVENTS: dyff.workflows.events
  DYFF_KUBERNETES__WORKFLOWS_NAMESPACE: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  labels:
    app: api-server
    component: api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      serviceAccountName: api-server
      containers:
        - name: api-server
          image: us-central1-docker.pkg.dev/dyff-354017/dyff-system/ul-dsri/dyff/dyff/api:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: api-server
            - secretRef:
                name: query-backend-mongodb
            - secretRef:
                name: api-key-signing
            - secretRef:
                name: auth-backend-mongodb
          args:
            - "--port"
            - "8080"
          ports:
            - name: http
              containerPort: 8080
          # GKE Ingress requires a readinessProbe. It must return 200.
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-server
  labels:
    app: api-server
    component: api-service
spec:
  type: ClusterIP
  selector:
    app: api-server
  ports:
    - name: http
      port: 8080
      targetPort: 8080
