# Copyright UL Research Institutes
# SPDX-License-Identifier: Apache-2.0

api:
  affinity: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Set environment variables in the `dyff-api` Deployment via ConfigMap.
  extraEnvVarsConfigMap:
    DYFF_KAFKA__CONFIG__BOOTSTRAP_SERVERS: kafka.kafka.svc.cluster.local
    DYFF_KAFKA__TOPICS__WORKFLOWS_EVENTS: dyff.workflows.events
    DYFF_KAFKA__TOPICS__WORKFLOWS_STATE: dyff.workflows.state
    DYFF_API__AUTH__MONGODB__DATABASE: "accounts"
    DYFF_API__QUERY__MONGODB__DATABASE: "workflows"
    DYFF_WORKFLOWS_SINK__MONGODB__DATABASE: "workflows"

  # -- Set environment variables in the `dyff-api` Deployment via Secret.
  extraEnvVarsSecret: {}

  image:
    pullPolicy: IfNotPresent
    repository: registry.gitlab.com/ul-dsri/dyff/dyff/api
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.dyff.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  nodeSelector: {}

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  replicaCount: 1

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  containerSecurityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  tolerations: []

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

fullnameOverride: ""

imagePullSecrets: []

nameOverride: ""

orchestrator:
  affinity: {}

  db:
    volumeSpec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi

  # -- Set environment variables in the `dyff-orchestrator` StatefulSet via ConfigMap.
  extraEnvVarsConfigMap:
    DYFF_KAFKA__CONFIG__BOOTSTRAP_SERVERS: kafka.kafka.svc.cluster.local
    DYFF_KAFKA__TOPICS__WORKFLOWS_EVENTS: dyff.workflows.events
    DYFF_KAFKA__TOPICS__WORKFLOWS_STATE: dyff.workflows.state

  # -- Set environment variables in the `dyff-orchestrator` StatefulSet via Secret.
  extraEnvVarsSecret: {}

  image:
    pullPolicy: IfNotPresent
    repository: registry.gitlab.com/ul-dsri/dyff/dyff/orchestrator
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: orchestrator.dyff.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  nodeSelector: {}

  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  replicaCount: 1

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  containerSecurityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  tolerations: []

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
