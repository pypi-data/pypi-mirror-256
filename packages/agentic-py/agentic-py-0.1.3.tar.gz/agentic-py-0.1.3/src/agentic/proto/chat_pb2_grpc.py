# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import chat_pb2 as proto_dot_chat__pb2


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateChat = channel.unary_unary(
            "/chat.ChatService/CreateChat",
            request_serializer=proto_dot_chat__pb2.CreateChatRequest.SerializeToString,
            response_deserializer=proto_dot_chat__pb2.CreateChatResponse.FromString,
        )
        self.AddMessage = channel.unary_unary(
            "/chat.ChatService/AddMessage",
            request_serializer=proto_dot_chat__pb2.AddMessageRequest.SerializeToString,
            response_deserializer=proto_dot_chat__pb2.AddMessageResponse.FromString,
        )
        self.UpdateMessage = channel.unary_unary(
            "/chat.ChatService/UpdateMessage",
            request_serializer=proto_dot_chat__pb2.UpdateMessageRequest.SerializeToString,
            response_deserializer=proto_dot_chat__pb2.UpdateMessageResponse.FromString,
        )
        self.GetChat = channel.unary_unary(
            "/chat.ChatService/GetChat",
            request_serializer=proto_dot_chat__pb2.GetChatRequest.SerializeToString,
            response_deserializer=proto_dot_chat__pb2.GetChatResponse.FromString,
        )
        self.WatchChat = channel.unary_stream(
            "/chat.ChatService/WatchChat",
            request_serializer=proto_dot_chat__pb2.WatchChatRequest.SerializeToString,
            response_deserializer=proto_dot_chat__pb2.GetChatResponse.FromString,
        )


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AddMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WatchChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateChat": grpc.unary_unary_rpc_method_handler(
            servicer.CreateChat,
            request_deserializer=proto_dot_chat__pb2.CreateChatRequest.FromString,
            response_serializer=proto_dot_chat__pb2.CreateChatResponse.SerializeToString,
        ),
        "AddMessage": grpc.unary_unary_rpc_method_handler(
            servicer.AddMessage,
            request_deserializer=proto_dot_chat__pb2.AddMessageRequest.FromString,
            response_serializer=proto_dot_chat__pb2.AddMessageResponse.SerializeToString,
        ),
        "UpdateMessage": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateMessage,
            request_deserializer=proto_dot_chat__pb2.UpdateMessageRequest.FromString,
            response_serializer=proto_dot_chat__pb2.UpdateMessageResponse.SerializeToString,
        ),
        "GetChat": grpc.unary_unary_rpc_method_handler(
            servicer.GetChat,
            request_deserializer=proto_dot_chat__pb2.GetChatRequest.FromString,
            response_serializer=proto_dot_chat__pb2.GetChatResponse.SerializeToString,
        ),
        "WatchChat": grpc.unary_stream_rpc_method_handler(
            servicer.WatchChat,
            request_deserializer=proto_dot_chat__pb2.WatchChatRequest.FromString,
            response_serializer=proto_dot_chat__pb2.GetChatResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "chat.ChatService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateChat(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chat.ChatService/CreateChat",
            proto_dot_chat__pb2.CreateChatRequest.SerializeToString,
            proto_dot_chat__pb2.CreateChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AddMessage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chat.ChatService/AddMessage",
            proto_dot_chat__pb2.AddMessageRequest.SerializeToString,
            proto_dot_chat__pb2.AddMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateMessage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chat.ChatService/UpdateMessage",
            proto_dot_chat__pb2.UpdateMessageRequest.SerializeToString,
            proto_dot_chat__pb2.UpdateMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetChat(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chat.ChatService/GetChat",
            proto_dot_chat__pb2.GetChatRequest.SerializeToString,
            proto_dot_chat__pb2.GetChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WatchChat(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/chat.ChatService/WatchChat",
            proto_dot_chat__pb2.WatchChatRequest.SerializeToString,
            proto_dot_chat__pb2.GetChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
