:py:mod:`pytomography.transforms.SPECT.cutoff`
==============================================

.. py:module:: pytomography.transforms.SPECT.cutoff


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pytomography.transforms.SPECT.cutoff.CutOffTransform




.. py:class:: CutOffTransform(proj = None, file_NM = None)

   Bases: :py:obj:`pytomography.transforms.Transform`

   proj2proj transformation used to set pixel values equal to zero at the first and last few z slices. This is often required when reconstructing DICOM data due to the finite field of view of the projection data, where additional axial slices are included on the top and bottom, with zero measured detection events. This transform is included in the system matrix, to model the sharp cutoff at the finite FOV.

   :param proj: Measured projection data.
   :type proj: torch.tensor

   .. py:method:: forward(proj)

      Forward projection :math:`B:\mathbb{V} \to \mathbb{V}` of the cutoff transform.

      :param proj: Tensor of size [batch_size, Ltheta, Lr, Lz] which transform is appplied to
      :type proj: torch.Tensor

      :returns: Original projections, but with certain z-slices equal to zero.
      :rtype: torch.tensor


   .. py:method:: backward(proj, norm_constant = None)

      Back projection :math:`B^T:\mathbb{V} \to \mathbb{V}` of the cutoff transform. Since this is a diagonal matrix, the implementation is the same as forward projection, but with the optional `norm_constant` argument.

      :param proj: Tensor of size [batch_size, Ltheta, Lr, Lz] which transform is appplied to
      :type proj: torch.Tensor
      :param norm_constant: A tensor used to normalize the output during back projection. Defaults to None.
      :type norm_constant: torch.Tensor | None, optional

      :returns: Original projections, but with certain z-slices equal to zero.
      :rtype: torch.tensor



