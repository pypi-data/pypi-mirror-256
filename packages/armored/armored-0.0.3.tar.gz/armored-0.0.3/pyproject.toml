[project]
name = "armored"
description = "Armored that implements Model objects for Data Pipeline"
readme = "README.md"
license = {file = "LICENSE"}
maintainers = [{ name = "korawica", email = "korawich.anu@gmail.com" }]
classifiers = [
    "Topic :: Utilities",
    "Natural Language :: English",
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ['models', 'armored']
requires-python = ">=3.9.0"
dependencies = [
    "tzdata",
    "pydantic==2.6.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/korawica/armored/"
"Source Code" = "https://github.com/korawica/armored/"

[project.optional-dependencies]
test = ["clishelf"]

[project.scripts]
armored = "armored:main"

[build-system]
requires = ["flit_core<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "armored"

[tool.flit.sdist]
include = [
    "docs/",
    "tests/",
    "CHANGELOG.md",
]
exclude = [
    "examples/",
]

[tool.shelf.version]
version = "./armored/__init__.py"
changelog = "./CHANGELOG.md"

[tool.pytest.ini_options]
console_output_style = "count"
filterwarnings = ["error"]
addopts = [
    "--strict-config",
    "--strict-markers",
]

[tool.mypy]
python_version = "3.9"
files = ["armored"]
show_error_codes = true
pretty = true
strict = true
warn_unreachable = true
warn_unused_ignores = false
exclude = [
    '__main__\.py$',
]

[tool.black]
line-length = 80
target-version = ['py39']
exclude = """
(
    /(
        \\.git
        | \\.eggs
        | \\.__pycache__
        | \\.idea
        | \\.ruff_cache
        | \\.mypy_cache
        | \\.pytest_cache
        | \\venv
        | build
        | dist
        | venv
    )/
)
"""

[tool.ruff]
line-length = 80
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
