// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps

module __rs_hs_pipeline_head #(
    parameter DATA_WIDTH = 32,
    parameter PIPELINE_READY = 1,
    parameter PIPELINE_VALID_AND_DATA = 0
) (
    (* RS_CLK *)  input                        clk,
    (* RS_RST *)  input                        reset,

    // inbound
    (* RS_HS = "inbound.ready" *)  output wire                  if_full_n,
    (* RS_HS = "inbound.valid" *)  input  wire                  if_write,
    (* RS_HS = "inbound.data"  *)  input  wire [DATA_WIDTH-1:0] if_din,

    // outbound
    (* RS_HS = "outbound.valid" *)  output wire                  if_empty_n,
    (* RS_HS = "outbound.ready" *)  input  wire                  if_read,
    (* RS_HS = "outbound.data"  *)  output wire [DATA_WIDTH-1:0] if_dout
);

    wire if_write_gated = if_write & if_full_n;

    reg [DATA_WIDTH-1:0] if_din_reg;
    reg if_write_gated_reg;
    reg if_read_reg;
    always @ (posedge clk) begin
        if_din_reg <= if_din;
        if_write_gated_reg <= if_write_gated;
        if_read_reg <= if_read;
    end

    generate
        if (PIPELINE_VALID_AND_DATA == 1) begin
            assign if_dout = if_din_reg;
            assign if_empty_n = if_write_gated_reg;
        end
        else begin
            assign if_dout = if_din;
            assign if_empty_n = if_write_gated;
        end

        if (PIPELINE_READY == 1) begin
            assign if_full_n = if_read_reg;
        end
        else begin
            assign if_full_n = if_read;
        end

    endgenerate

endmodule
