{# Args:
  xo_file: Path to the output XO file.
  top_name: Name of the top-level module.
  kernel_xml: Path to the input `kernel.xml` file.
  hdl_dir: Path to the input HDL directory.
  work_dir: Path to the work directory where temporary files are generated. Note that
      the file structure generated under this directory is not part of the contract and
      is subject to change.
  ifaces: Dictionary mapping bus interface names to dictionaries of bus parameters
      mapping bus parameter names to their values.
-#}

set hdl_dir "{{ hdl_dir }}"
set ip_dir "{{ work_dir }}/ip"

create_project -force kernel_pack -in_memory
add_files -norecurse [glob ${hdl_dir}/*.v ${hdl_dir}/*/*.v ${hdl_dir}/*.dat]

# the tcl files should have been generated in the import step
foreach tcl_file [glob -nocomplain ${hdl_dir}/*.tcl ${hdl_dir}/*/*.tcl] {
  source ${tcl_file}
}

# add -quiet in case the IP is already generated by tcl
set ip_files [glob -nocomplain ${hdl_dir}/*/*.xci]
if {[llength ${ip_files}] > 0} {
  import_ip -quiet ${ip_files}
}
upgrade_ip -quiet [get_ips *]
generate_target synthesis [get_files *.xci]

set_property top "{{ top_name }}" [current_fileset]
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1
ipx::package_project -root_dir ${ip_dir} -vendor haoda -library xrtl -taxonomy /KernelIP -import_files -set_current false
ipx::unload_core ${ip_dir}/component.xml
ipx::edit_ip_in_project -upgrade true -name tmp_edit_project -directory ${ip_dir} ${ip_dir}/component.xml
set_property core_revision 2 [ipx::current_core]
foreach up [ipx::get_user_parameters] {
  ipx::remove_user_parameter [get_property NAME ${up}] [ipx::current_core]
}
set_property sdx_kernel true [ipx::current_core]
set_property sdx_kernel_type rtl [ipx::current_core]
ipx::create_xgui_files [ipx::current_core]

{% for name, params in ifaces.items() -%}
  ipx::associate_bus_interfaces -busif {{ name }} -clock ap_clk [ipx::current_core]
  {% for key, value in params.items() -%}
    set_property value {{ value }} [ipx::add_bus_parameter {{ key }} [ipx::get_bus_interfaces {{ name }}]]
  {% endfor %}
{% endfor -%}
set_property xpm_libraries {XPM_CDC XPM_MEMORY XPM_FIFO} [ipx::current_core]
set_property supported_families {} [ipx::current_core]
set_property auto_family_support_level level_2 [ipx::current_core]
ipx::update_checksums [ipx::current_core]
ipx::save_core [ipx::current_core]
close_project -delete

package_xo -force -xo_path "{{ xo_file }}" -kernel_name "{{ top_name }}" -ip_directory ${ip_dir} -kernel_xml "{{ kernel_xml }}"
