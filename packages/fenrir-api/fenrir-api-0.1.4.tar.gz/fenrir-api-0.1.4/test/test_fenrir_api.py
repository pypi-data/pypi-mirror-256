# coding: utf-8

"""
    Fenrir Api

    # Introduction  The Fenrir Cloud API allows you to interact with Fenrir Cloud  and manage Applications, Deployments, and other resources  using conventional HTTP requests.    ## Authentication  The Fenrir Cloud API uses API keys for the authentication.  You can create new API keys in your Fenrir Cloud dashboard.  Your bearer API key must be set in the \"Authorization\" header, for example:  ```bash curl https://api.fenrircloud.com/1.0/api/applications \\    -H \"Accept: application/json\" \\    -H \"Authorization: Bearer FENRIR_API_KEY\" ```  ## Responses  When a request is successful, a response body will typically contain a JSON object.  For DELETE requests, a response with successful HTTP 204 NO_CONTENT status and a simple status will be returned.  For other request, a JSON object will contain a requested object. If list of objects is requested, an array of them will be returned instead.   ### Example Response (Single Object)  ```json {   \"application\": {     \"name\": \"my-app\",     ...   } } ```  ### Example Response (Multiple Objects)  ```json {   \"applications\":      [         {           \"name\": \"my-app\",           ...         },         {           \"name\": \"another-app\",           ...         }     ] } ```  ## Error Handling  Depending on the issue, a *4XX* status code will be returned.  A body will contain a JSON object with the details of the message.  Inside a JSON object, an error message will be included.   For 400 Bad Request errors caused by validation issues, additional `errors` key will be set. That key will contain a list of   ### Example Error Response  ```json {   \"message\": \"Invalid Request\",   \"errors\": [     {       \"field\": \"configuration.name\",       \"error\": \"must not contain special characters\"]     },     ...   ] } ```  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fenrir_api.api.fenrir_api import FenrirApi


class TestFenrirApi(unittest.TestCase):
    """FenrirApi unit test stubs"""

    def setUp(self) -> None:
        self.api = FenrirApi()

    def tearDown(self) -> None:
        pass

    def test_create_api_token(self) -> None:
        """Test case for create_api_token

        """
        pass

    def test_create_application(self) -> None:
        """Test case for create_application

        """
        pass

    def test_create_application_configuration(self) -> None:
        """Test case for create_application_configuration

        """
        pass

    def test_create_deployment(self) -> None:
        """Test case for create_deployment

        """
        pass

    def test_create_matchmaking_queue(self) -> None:
        """Test case for create_matchmaking_queue

        """
        pass

    def test_create_matchmaking_queue_configuration(self) -> None:
        """Test case for create_matchmaking_queue_configuration

        """
        pass

    def test_delete_api_token(self) -> None:
        """Test case for delete_api_token

        """
        pass

    def test_delete_application(self) -> None:
        """Test case for delete_application

        """
        pass

    def test_delete_deployment(self) -> None:
        """Test case for delete_deployment

        """
        pass

    def test_delete_matchmaking_queue(self) -> None:
        """Test case for delete_matchmaking_queue

        """
        pass

    def test_get_api_token(self) -> None:
        """Test case for get_api_token

        """
        pass

    def test_get_api_tokens(self) -> None:
        """Test case for get_api_tokens

        """
        pass

    def test_get_application(self) -> None:
        """Test case for get_application

        """
        pass

    def test_get_application_configuration(self) -> None:
        """Test case for get_application_configuration

        """
        pass

    def test_get_application_configurations(self) -> None:
        """Test case for get_application_configurations

        """
        pass

    def test_get_application_stats(self) -> None:
        """Test case for get_application_stats

        """
        pass

    def test_get_applications(self) -> None:
        """Test case for get_applications

        """
        pass

    def test_get_current_application_configuration(self) -> None:
        """Test case for get_current_application_configuration

        """
        pass

    def test_get_current_matchmaking_queue_configuration(self) -> None:
        """Test case for get_current_matchmaking_queue_configuration

        """
        pass

    def test_get_deployment(self) -> None:
        """Test case for get_deployment

        """
        pass

    def test_get_deployment_stats(self) -> None:
        """Test case for get_deployment_stats

        """
        pass

    def test_get_deployments(self) -> None:
        """Test case for get_deployments

        """
        pass

    def test_get_images(self) -> None:
        """Test case for get_images

        """
        pass

    def test_get_instance(self) -> None:
        """Test case for get_instance

        """
        pass

    def test_get_instance_logs(self) -> None:
        """Test case for get_instance_logs

        """
        pass

    def test_get_instance_logs_preview(self) -> None:
        """Test case for get_instance_logs_preview

        """
        pass

    def test_get_instances(self) -> None:
        """Test case for get_instances

        """
        pass

    def test_get_matchmaking_queue(self) -> None:
        """Test case for get_matchmaking_queue

        """
        pass

    def test_get_matchmaking_queue_configuration(self) -> None:
        """Test case for get_matchmaking_queue_configuration

        """
        pass

    def test_get_matchmaking_queue_configurations(self) -> None:
        """Test case for get_matchmaking_queue_configurations

        """
        pass

    def test_get_matchmaking_queues(self) -> None:
        """Test case for get_matchmaking_queues

        """
        pass

    def test_update_application(self) -> None:
        """Test case for update_application

        """
        pass

    def test_update_matchmaking_queue(self) -> None:
        """Test case for update_matchmaking_queue

        """
        pass


if __name__ == '__main__':
    unittest.main()
