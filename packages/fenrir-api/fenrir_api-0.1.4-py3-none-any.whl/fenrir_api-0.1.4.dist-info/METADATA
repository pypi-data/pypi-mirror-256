Metadata-Version: 2.1
Name: fenrir-api
Version: 0.1.4
Summary: Fenrir Api
Home-page: 
Author: OpenAPI Generator community
Author-email: team@openapitools.org
Keywords: OpenAPI,OpenAPI-Generator,Fenrir Api
Description-Content-Type: text/markdown
Requires-Dist: urllib3 <2.1.0,>=1.25.3
Requires-Dist: python-dateutil
Requires-Dist: pydantic >=2
Requires-Dist: typing-extensions >=4.7.1

    # Introduction  The Fenrir Cloud API allows you to interact with Fenrir Cloud  and manage Applications, Deployments, and other resources  using conventional HTTP requests.    ## Authentication  The Fenrir Cloud API uses API keys for the authentication.  You can create new API keys in your Fenrir Cloud dashboard.  Your bearer API key must be set in the \&quot;Authorization\&quot; header, for example:  &#x60;&#x60;&#x60;bash curl https://api.fenrircloud.com/1.0/api/applications \    -H \&quot;Accept: application/json\&quot; \    -H \&quot;Authorization: Bearer FENRIR_API_KEY\&quot; &#x60;&#x60;&#x60;  ## Responses  When a request is successful, a response body will typically contain a JSON object.  For DELETE requests, a response with successful HTTP 204 NO_CONTENT status and a simple status will be returned.  For other request, a JSON object will contain a requested object. If list of objects is requested, an array of them will be returned instead.   ### Example Response (Single Object)  &#x60;&#x60;&#x60;json {   \&quot;application\&quot;: {     \&quot;name\&quot;: \&quot;my-app\&quot;,     ...   } } &#x60;&#x60;&#x60;  ### Example Response (Multiple Objects)  &#x60;&#x60;&#x60;json {   \&quot;applications\&quot;:      [         {           \&quot;name\&quot;: \&quot;my-app\&quot;,           ...         },         {           \&quot;name\&quot;: \&quot;another-app\&quot;,           ...         }     ] } &#x60;&#x60;&#x60;  ## Error Handling  Depending on the issue, a *4XX* status code will be returned.  A body will contain a JSON object with the details of the message.  Inside a JSON object, an error message will be included.   For 400 Bad Request errors caused by validation issues, additional &#x60;errors&#x60; key will be set. That key will contain a list of   ### Example Error Response  &#x60;&#x60;&#x60;json {   \&quot;message\&quot;: \&quot;Invalid Request\&quot;,   \&quot;errors\&quot;: [     {       \&quot;field\&quot;: \&quot;configuration.name\&quot;,       \&quot;error\&quot;: \&quot;must not contain special characters\&quot;]     },     ...   ] } &#x60;&#x60;&#x60;  
    
