[build-system]
build-backend= "setuptools.build_meta"
requires = ["setuptools", "wheel", "attrs", "Flask-Caching"]

[project]
name = "py-flaskbase"
authors = [
    {name = "atav928", email = "dev@tavnets.com"}
]
requires-python = ">=3.8,<4"
license = {file = "LICENSE"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["version", "readme", "dependencies", "description"]

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}
version = {attr = "py_flaskbase._version.__version__"}
dependencies = {file = "requirements.txt"}
description = {file = "DESCRIPTION"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["py_flaskbase*"]
namespaces = true

[tool.coverge.run]
source = ["src"]

[tool.pylint]
max-line-length = 150

[project.optional-dependencies]
test = [
    "pytest-cov",
    "pytest",
    "pytest-mock",
    "unittest2",
    "dataclasses",
    "six",
    "black",
    "pylint",
    "tomli"
]

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report html --cov-report term-missing --cov-fail-under 65"

[tool.black]
line-length = 150
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  tests/data
  | profiling
)/
'''

[tool.isort]
atomic = true
profile = "black"
line_length = 150
skip_gitignore = true
skip_glob = ["tests/data", "profiling"]
known_first_party = ["black", "blib2to3", "blackd", "_black_version"]
