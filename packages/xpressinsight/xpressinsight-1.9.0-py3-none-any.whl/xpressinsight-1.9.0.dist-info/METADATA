Metadata-Version: 2.1
Name: xpressinsight
Version: 1.9.0
Summary: FICO Xpress - Insight Python package
Home-page: https://www.fico.com/en/products/fico-xpress-optimization
Author: FICO Xpress dev. team
Author-email: support@fico.com
License: Xpress Shrinkwrap License Agreement
Keywords: optimization xpress insight
Platform: any
Classifier: License :: Other/Proprietary License
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: pyarrow >=4.0.0
Requires-Dist: pandas >=1.0.0
Requires-Dist: numpy >=1.17.0
Requires-Dist: urllib3
Requires-Dist: certifi
Requires-Dist: dataclasses-json >=0.5.7
Requires-Dist: packaging >=23.0
Requires-Dist: typing-extensions >=4.6.0 ; python_version < "3.12.0"

FICO<sup>&reg;</sup> Xpress Insight Python Package
==================================================

The 'xpressinsight' Python package can be used to develop Python<sup>&reg;</sup> based web applications for Xpress Insight.

Documentation
-------------

- [FICO Xpress Insight 4 Python Package Reference Manual](https://www.fico.com/fico-xpress-optimization/docs/latest/insight-python-doc)
- [FICO Xpress Insight 4 Developers Guide For Python](https://www.fico.com/fico-xpress-optimization/docs/latest/insight_dev_guide_py)
- [FICO Xpress Insight 5 Python Package Reference Manual](https://www.fico.com/fico-xpress-optimization/docs/latest/insight5-python-doc)
- [FICO Xpress Insight 5 Developers Guide For Python](https://www.fico.com/fico-xpress-optimization/docs/latest/insight5_dev_guide_py)

Release Notes
-------------

__v 1.9.0 (Insight 5.9.0)__

- New function `AppBase.initialize_entities` for initializing selected app entities to their default values.
- Add support for calling app interface & other standard functions from multiple threads.
- The `attach_status` property now holds the status of the last attachment operation invoked from the current thread; 
  previously it referred to the last attachment operation from any thread.
- The `attach_status` property is no longer read-only.
- The internal work folder is now called `xpressinsight` instead of `insight`.
- The following changes only affect test mode:
  - The execution mode work folder is now a sub-folder `work_dir` within the application folder.
  - The `xpressinsight` work folder is now created as a sub-folder of the execution mode work folder.
  - Resolved issues when attachment filenames end `.properties`.

__v 1.8.0 (Insight 5.8.0)__

- New function `get_scenario_data` allows reading entities from other apps and scenarios.
- Introduce `xi.types.Column` class which can be used in place of `xi.Column` in app definitions. There is currently no 
  plan to remove `xi.Column`.
- Attempt to capture entity data after an execution mode that ended abnormally (exception raised or `sys.exit` called).

__v 1.7.1 (Insight 5.7.0)__

- New function `get_solution_database` returns the location and credentials of the DMP solution's database.
- Enabled functions `get_app_attach`, `get_scen_attach` and `put_scen_attach` to write/read the attachment to/from a 
  folder other than the work directory or a local filename different from attachment name.
- Enabled functions `get_attach_by_tag`, `get_attachs_by_tag` and `get_attach_filenames_by_tag` to write the
  attachments to a folder other than the work directory.
- Fixed an issue with the `InsightDmpContext.solution_token_expiry_time` value in non-UTC timezones.
- Removed support for Python 3.7. This version supports only Python 3.8 - 3.11.

__v 1.6.0 (Insight 5.6.0)__

- Resolved an error when a script declares multiple app classes with a shared superclass.
- Added attribute `default` to the `xi.Column` class.
- Use of the old syntax for annotating entities (e.g. `xi.Scalar` instead of `xi.types.Scalar`) will cause a warning
  message when the app is built or executed in Python 3.11. This syntax has been deprecated and will not be usable 
  at all in Python 3.12+.
- New function `get_insight_context` returns information about the Insight server and the DMP solution.
- Python 3.11 support.
- Pandas 2.0 support.

__v 1.5.0 (Insight 5.5.0)__

- Allow an Index entity to be referenced multiple times within a single Series or DataFrame - 
  e.g. `Distance: xi.types.Series(index=['City', 'City'], dtype=xi.real)`.
- Support `multiprocessing` package.

__v 1.4.1 (Insight 4.59.6)__

- Resolve issue building apps with Xpress 9.2 and apprunner 1.4.
- Update dependencies to require Pandas v1 with xpressinsight 1.4.

__v 1.4.0 (Insight 5.4.0 and 4.59.2)__

- New syntax for annotating entities, `xi.types.Scalar`/`Param`/`Index`/`Series`/`DataFrame` instead
  of `xi.Scalar`/`Param`/`Index`/`Series`/`DataFrame`.
  - The new syntax is compatible with forward annotations (`from __future__ import annotations`).
  - The old syntax will continue to work in Python 3.7-3.10 but will not be usable in Python 3.11+, 
    so we recommend existing apps are migrated from the old to the new syntax.
  - When the new syntax is used, entities may also be declared in a parent class of the Insight 
    application class.

__v 1.3.0 (Insight 5.3.0 and 4.59.0)__

- Support for Insight 5 custom progress notifications:
  - Added functions `send_progress_update`, `get_messages` and `put_messages` to Insight application interface
    (`AppInterface`).
  - Added the `send_progress` attribute the `ExecMode`, `ExecModeLoad`, and `ExecModeRun` decorators.
  - Added the `update_progress` attribute to the entity type annotations.
- RHEL 8 support.
- Python 3.10 support
  - At time of writing the ‘default’ Anaconda channel does not have all the dependencies required by the 
    `xpressinsight` package for this Python version.  We recommend conda users to stick with Python 3.9, or use a 
    different distribution of Python 3.10 until this is resolved.
- Fixed an issue that caused a failure if the path to the temporary directory contained a space.

__v 1.2.3 (Insight 5.2.1 and 4.58.0)__

- Added the `threads` attribute to the `ExecMode`, `ExecModeLoad`, and `ExecModeRun` decorators.

__v 1.2.2__

- Fixed an issue that could cause a type check exception when the user created
  empty (null) fields in a DataFrame column in the Insight UI.

__v 1.2.1__

- Added test mode functions `add_item_info` and `clear_item_infos` to Insight application interface.
- Added function `scenario_parent_path` to Insight application interface.
- Added `RepositoryPath` class for building and parsing of repository paths.

__v 1.2.0__

- Added scenario types property (`scen_types`) to application configuration (`AppConfig`).
- Added repository functions `get_item_info` and `get_item_infos` to Insight application interface (`AppInterface`).

__v 1.1.3__

- Performance improvements.
- Python 3.9 support.

__v 1.1.2__

- Fixed an exception that could occur when an empty MultiIndex DataFrame has been assigned to an Insight entity.
- Updated documentation describing how to set up Anaconda.

__v 1.1.1__

- Improve error message when Insight cannot start Python because of security restrictions.
- Update documentation and update VDL version number in examples.

__v 1.1.0__

 - Additional factory function `create_app` initializes and configures standard test environment.
 - Some performance issues with executing a Python based scenario have been addressed.
 - Maximum length of a string in an Index, Series, or DataFrame has been changed from 1,000,000 bytes to 250,000 characters.
 - Default name of the temporary Insight working directory has been changed from "insight" to "work_dir/insight".

__v 1.0.2__

 - The functions `update` and `reset_progress` have been added to the Insight Python interface.
 - Changed Python standard output to unbuffered mode to improve responsiveness of output messages.
 
Licensing
---------

The Xpress software is governed by the
[Xpress Shrinkwrap License Agreement](https://community.fico.com/s/contentdocument/06980000002h0i5AAA).
When downloading or using the package, you accept the license terms. After installation, a copy of the Xpress Shrinkwrap 
License will be stored in the `LICENSE.txt` file in the `site-packages/xpressinsight-*.dist-info` directory.
In Anaconda, a copy of the license file will be stored in the `pkgs/xpressinsight-*/info/licenses` directory.

"Python" is a registered trademark of the Python Software Foundation.
"FICO" is a registered trademark of Fair Isaac Corporation in the United States 
and may be a registered trademark of Fair Isaac Corporation in other countries. 
Other product and company names herein may be trademarks of their respective owners.

&copy; Copyright 2012-2024 Fair Isaac Corporation. All rights reserved.
