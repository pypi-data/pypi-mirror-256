"batch-language-translation"
****************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Translate text to other language over pre-deployed model. Use state of
the art neural machine translation to translate text between more than
15 languages. Limitations:   - A batch may have up to 100 records.   -
A record may be up to 5000 characters long.   - The total of
characters to process in a request can be up to 20,000 characters.


Usage
=====

   oci ai language batch-language-translation [OPTIONS]


Required Parameters
===================

--documents [complex type]

List of documents for translation. This is a complex type whose value
must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Optional Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment that calls the API, inference will be
served from pre trained model

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--target-language-code [text]

Language code supported - auto : Automatically detect language - ar :
Arabic - pt-BR : Brazilian Portuguese - cs : Czech - da : Danish - nl
: Dutch - en : English - fi : Finnish - fr : French - fr-CA : Canadian
French - de : German - it : Italian - ja : Japanese - ko : Korean - no
: Norwegian - pl : Polish - ro : Romanian - zh-CN : Simplified Chinese
- es : Spanish - sv : Swedish - zh-TW : Traditional Chinese - tr :
Turkish - el : Greek - he : Hebrew


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci ai language batch-language-translation --generate-param-json-input documents > documents.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       oci ai language batch-language-translation --documents file://documents.json
