Metadata-Version: 2.1
Name: gyvatukas
Version: 11
Summary: See README.md
Home-page: https://github.com/pauliusbaulius/gyvatukas
Author: Paulius
Author-email: dev@paulius.xyz
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: appdirs (>=1.4.4,<2.0.0)
Requires-Dist: bcrypt (>=4.1.2,<5.0.0)
Requires-Dist: beautifulsoup4 (>=4.12.2,<5.0.0)
Requires-Dist: email-validator (>=2.1.0.post1,<3.0.0)
Requires-Dist: json-repair (>=0.4.3,<0.5.0)
Requires-Dist: pdoc3 (>=0.10.0,<0.11.0)
Requires-Dist: pydantic (>=2.5.3,<3.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: zstandard (>=0.22.0,<0.23.0)
Project-URL: Documentation, https://pauliusbaulius.github.io/gyvatukas/gyvatukas/
Project-URL: Repository, https://github.com/pauliusbaulius/gyvatukas
Description-Content-Type: text/markdown

# gyvatukas
collection of python utils and prototypes.
it is public, but i would not advise to use it for any serious business. is more of a util 
bundle and playground for new ideas.

anyways, see docs page for more info.

ðŸš¨ No changelog

ðŸš© Frequently changing API

ðŸš¨ Lack of tests

ðŸ¤  Only fun

## usage
```python
import gyvatukas as g

tel = '+37060000000'
is_valid, clean_tel = g.validate_lt_tel_nr(tel)
print(is_valid, clean_tel)
```

## dev guide
0. New code time (add new features to `__init__/__all__` if/when they are "prod" worthy to use 
   the pattern of `gyvatukas.<util>` in dependent projects (except for WWW))
1. Format + lint (its 2024, people nitpick a lot)
2. Build docs
3. Increment version in pyproject.toml
4. Build package (commit package + pyproject.toml + docs (clean single build commit, since docs 
   are published from master and are source of truth for the latest pypi release))
5. `poetry publish`
6. Profit ðŸ¤‘

