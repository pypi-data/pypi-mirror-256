image: continuumio/anaconda3

stages:
  - test
  - test_plugins
  - build
  - deploy

# ===== TEST Dynamiks ubuntu =====
test_Dynamiks:  # name the job what we like
  image: continuumio/anaconda3
  stage:  # build, test, deploy defined by default [2]
    test
  script:
  - pip install "psutil~=5.0" --upgrade # >= 5.9 & <6
  - pip install -e .[test]  --ignore-installed tbb
  - pip install git+https://gitlab.windenergy.dtu.dk/TOPFARM/PyWake.git --force-reinstall --no-deps
  - python -c "from h2lib_tests.utils import install_license; install_license()"
  - pytest
  tags:  # only runners with this tag can do the job [3]
  - ci-ubuntu
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"



# ===== Check code style =====
check_code_style:  # name the job what we like
  stage:  # build, test, deploy defined by default [2]
    test
  script:
  - pip install -e . --user
  - pycodestyle --ignore=E501,W504,E741 dynamiks
  tags:  # only runners with this tag can do the job [3]
  - ci-ubuntu
  rules:
  - if: $CI_COMMIT_BRANCH == "master"
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# ===== TEST Dynamiks on Windows with plots =====
test_Dynamiks_windows:  # name the job what we like
  stage:  # build, test, deploy defined by default [2]
    test
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  script:  # runs on windows machine due to tag below
  - conda init powershell
  - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
  - conda activate py311
  - conda install -c conda-forge ffmpeg -y
  - pip install git+https://gitlab.windenergy.dtu.dk/TOPFARM/PyWake.git --upgrade
  - pip install hipersim --upgrade
  - pip install h2lib[test]
  - pip install -e .[test] --no-deps
  - python -c "from h2lib_tests.utils import install_license; install_license()"
  - pytest --cov-report term-missing:skip-covered --cov=dynamiks --cov-config .coveragerc
  tags:  # tag for shared runner on windows machine
  - ANMH_old
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"




pypi_linux:
  stage:
    deploy
  script:
    - apt-get update
    #- apt-get install -y pandoc
    - pip install --upgrade pip
    #- pip install pypandoc
    - pip install -e . --upgrade
    - pip install --upgrade build
    - pip install --upgrade twine
    - python3 -m build
    - twine upload dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
    - if:  $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
    - when: never
  tags:
  - ci-ubuntu

# build_conda:
  # stage: build
  # image: condaforge/mambaforge:latest
  # dependencies: []
  # script:
    # - export VERSION=`git describe --tags --always | sed 's/v//' | sed 's/-/.dev/' | sed 's/-/_/'`
    # - mamba install -c conda-forge --override-channels -y boa conda-verify
    # - conda mambabuild --no-anaconda-upload -c conda-forge --override-channels --output-folder ./conda_channel ./recipe
  # artifacts:
    # untracked: false
    # expire_in: "3 days"
    # paths: ["conda_channel/noarch/dynamiks*.tar.bz2"]
  # rules:
    # - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
    # - if:  $CI_PIPELINE_SOURCE == "merge_request_event"
      # when: manual
      # allow_failure: true
      # changes:
        # - setup.py
        # - recipe/meta.yaml
    # - when: never
  # tags:
    # -  ci-ubuntu

# deploy_conda:
  # stage: deploy
  # image: docker:latest
  # dependencies: ["build_conda"]
  # needs: ["build_conda"]
  # script:
    # - CONDA_PKG=`basename ./conda_channel/noarch/dynamiks*.tar.bz2`
    # - cp  -p ./conda_channel/noarch/$CONDA_PKG /conda_channel_open/noarch/${CONDA_PKG}.tmp
    # - chown 1000:1000 /conda_channel_open/noarch/${CONDA_PKG}.tmp
    # - mv /conda_channel_open/noarch/${CONDA_PKG}.tmp /conda_channel_open/noarch/${CONDA_PKG}
  # rules:
    # - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  # tags:
    # -  conda_channel