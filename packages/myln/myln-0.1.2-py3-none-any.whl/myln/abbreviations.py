class Abbreviations:
    default_abbreviations = {
        "account": "acct",
        "answer": "A",
        "and": "&",
        "appointment": "appt",
        "application": "app",
        "approximate": "approx",
        "association": "assoc",
        "as soon as possible": "ASAP",
        "background": "bgd",
        "benefit": "ben",
        "budget": "budg",
        "business": "biz",
        "communication": "comm",
        "conference": "conf",
        "corporation": "corp",
        "customer": "cust",
        "department": "dept",
        "demonstration": "demo",
        "development": "dev",
        "document": "doc",
        "education": "edu",
        "estimate": "est",
        "example": "ex",
        "executive": "exec",
        "financial": "fin",
        "forecast": "fcast",
        "for your information": "FYI",
        "frequently asked questions": "FAQ",
        "government": "gov",
        "guarantee": "guar",
        "headquarters": "HQ",
        "historical": "hist",
        "hospital": "hosp",
        "information": "info",
        "introduction": "intro",
        "journal": "jnl",
        "kilogram": "kg",
        "kilometer": "km",
        "legal": "leg",
        "library": "lib",
        "limitation": "lim",
        "management": "mgmt",
        "manufacturing": "mfg",
        "marketing": "mkt",
        "number": "no.",
        "operation": "op",
        "organization": "org",
        "percent": "%",
        "please": "pls",
        "project": "proj",
        "question": "Q",
        "reference": "ref",
        "requirement": "req",
        "system": "sys",
        "technology": "tech",
        "that is": "i.e.",
        "thanks": "thx",
        "thank you": "ty",
        "university": "univ",
        "versus": "vs",
        "volume": "vol",
        "website": "web",
        "with": "w/",
        "without": "w/o",
        "workshop": "wksp",
        "year": "yr",
        "zone": "zn"

    }

    @classmethod
    def apply_abbreviations(cls, text):
        for phrase, abbreviation in cls.default_abbreviations.items():
            text = text.replace(phrase, abbreviation)
        return text
