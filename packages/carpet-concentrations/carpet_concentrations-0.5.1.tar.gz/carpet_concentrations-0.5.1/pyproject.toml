[tool.coverage.run]
source = ["src"]
branch = true

[tool.poetry]
name = "carpet-concentrations"
version = "0.5.1"
description = "Core tools for the development of greenhouse gas concentration input files (i.e. flying carpets)."
authors = ["Zebedee Nicholls <zebedee.nicholls@climate-resource.com>"]
readme = "README.md"
packages = [{include = "carpet_concentrations", from = "src"}]
license = "BSD-3-Clause"

[tool.commitizen]
version = "0.4.2"
version_files = ["pyproject.toml:^version"]
tag_format = "v$version"
major_version_zero = true

[tool.poetry.dependencies]
python = "^3.9"
notebook = { version = ">=6.0", optional = true }
ipywidgets = { version = ">=8.0", optional = true }
matplotlib = { version = ">=3.7", optional = true }
seaborn = { version = ">=0.12", optional = true }
xarray = ">=2022.0"
attrs = ">=22.0"
cftime = ">=1.6"
openscm-units = ">=0.5"
pint = ">=0.19"
pint-xarray = ">=0.3"
cf-xarray = { version = ">=0.8", optional = true }
pooch = { version = ">=1.0", optional = true }
netcdf4 = { version = ">=1.0", optional = true }

[tool.poetry.extras]
cfxarray = ["cf-xarray", "pooch"]
netcdf = ["netcdf4"]
notebooks = ["notebook", "ipywidgets"]
plots = ["seaborn"]

[tool.poetry.group.tests.dependencies]
pytest = "^7.3.1"

[tool.poetry.group.docs.dependencies]
myst-nb = "^0.17.0"
sphinx-rtd-theme = "^1.2.0"
sphinx-autodoc-typehints = "^1.23.0"
jupytext = "^1.14.5"
sphinx-copybutton = "^0.5.2"
sphinx-autodocgen = "^1.3"
sphinxcontrib-bibtex = "^2.5.0"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^4.0.0"
coverage = "^7.2.0"
black = "23.3.0"
blackdoc = "0.3.8"
commitizen = "^3.1.1"
mypy = "^1.2.0"
ruff = "0.0.264"
pre-commit = "^3.3.1"
towncrier = "^23.6.0"
liccheck = "^0.9.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
fail_under = 95
skip_empty = true
show_missing = true
# Regexes for lines to exclude from consideration in addition to the defaults
exclude_also = [
    # Don't complain about missing type checking code:
    "if TYPE_CHECKING",
]

[tool.mypy]
strict = true
# prevent unimported libraries silently being treated as Any
disallow_any_unimported = true
# show error codes on failure with context
show_error_codes = true
show_error_context = true
# warn if code can't be reached
warn_unreachable = true
# importing following uses default settings
follow_imports = "normal"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.ruff]
src = ["src"]
target-version = "py39"
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # xarray repo, no PD
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D200",  # One-line docstring should fit on one line with quotes
    "D400",  # First line should end with a period
]
# Provide some leeway for long docstring, this is otherwise handled by black
line-length = 110

[tool.ruff.per-file-ignores]
"test*.py" = [
    "D",  # Documentation not needed in tests
    "S101",  # S101 Use of `assert` detected
    "PLR2004" # Magic value used in comparison
]
"docs/source/notebooks/*" = [
    "D100",  # Missing docstring at the top of file
    "E402",  # Module level import not at top of file
    "S101",  # Use of `assert` detected
]
"scripts/*" = [
    "S101" # S101 Use of `assert` detected
]
"*.pyi" = ["D100", "D101", "D102", "PL"]

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.towncrier]
package = "carpet_concentrations"
package_dir = "src"
filename = "docs/source/changelog.md"
directory = "changelog/"
title_format = "## carpet-concentrations {version} ({project_date})"
underlines = ["", "", ""]
issue_format = "[#{issue}](https://github.com/climate-resource/Carpet-Concentrations/pulls/{issue})"

  [[tool.towncrier.type]]
  directory = "breaking"
  name = "Breaking Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "deprecation"
  name = "Deprecations"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "feature"
  name = "Features"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "improvement"
  name = "Improvements"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "fix"
  name = "Bug Fixes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "docs"
  name = "Improved Documentation"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "trivial"
  name = "Trivial/Internal Changes"
  showcontent = false

[tool.liccheck]
authorized_licenses = [
    "bsd",
    "bsd license",
    "BSD 3-Clause",
    "CC0",
    "apache",
    "apache 2.0",
    "apache software",
    "apache software license",
    "Apache License, Version 2.0",
    "gnu lgpl",
    "lgpl with exceptions or zpl",
    "LGPLv2+",
    "GNU Lesser General Public License v2 (LGPLv2)",
    "GNU Lesser General Public License v2 or later (LGPLv2+)",
    "gpl v3",
    "gplv3",
    "Historical Permission Notice and Disclaimer (HPND)",
    "isc license",
    "isc license (iscl)",
    "mit",
    "mit license",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "python software foundation",
    "python software foundation license",
    "zpl 2.1",
]
unauthorized_licenses = [
]
