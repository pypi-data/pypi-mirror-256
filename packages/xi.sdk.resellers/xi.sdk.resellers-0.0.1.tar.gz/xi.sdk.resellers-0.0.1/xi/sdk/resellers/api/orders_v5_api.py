# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import date, datetime
from pydantic import Field, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from xi.sdk.resellers.models.order_cancel_response import OrderCancelResponse
from xi.sdk.resellers.models.order_create_request import OrderCreateRequest
from xi.sdk.resellers.models.order_create_response import OrderCreateResponse
from xi.sdk.resellers.models.order_detail_response import OrderDetailResponse
from xi.sdk.resellers.models.order_search_response import OrderSearchResponse

from xi.sdk.resellers.api_client import ApiClient, RequestSerialized
from xi.sdk.resellers.api_response import ApiResponse
from xi.sdk.resellers.rest import RESTResponseType


class OrdersV5Api:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def delete_orders_order_number(
        self,
        ordernumber: Annotated[StrictStr, Field(description="Ingram Micro sales order number")],
        customer_number: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        iso_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 chars ISO country code")],
        entry_date: Annotated[StrictStr, Field(description="Order entry date (yyyy-mm-dd)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OrderCancelResponse:
        """Cancel an Existing Order

        This endpoint is a request to cancel a previously accepted order. Use your Ingram Micro sales order number to cancel an order.   The <strong>orderNumber, isoCountryCode, customerNumber</strong> and <strong>entryDate</strong> parameters are required.   This call must be submitted <strong>before</strong> the order is released to Ingram Micro’s warehouse. The order cannot be canceled once it is released to the warehouse.   Direct ship orders cannot be canceled. Contact your Ingram Micro sales rep for assistance.

        :param ordernumber: Ingram Micro sales order number (required)
        :type ordernumber: str
        :param customer_number: Your unique Ingram Micro customer number (required)
        :type customer_number: str
        :param iso_country_code: 2 chars ISO country code (required)
        :type iso_country_code: str
        :param entry_date: Order entry date (yyyy-mm-dd) (required)
        :type entry_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_orders_order_number_serialize(
            ordernumber=ordernumber,
            customer_number=customer_number,
            iso_country_code=iso_country_code,
            entry_date=entry_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderCancelResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def delete_orders_order_number_with_http_info(
        self,
        ordernumber: Annotated[StrictStr, Field(description="Ingram Micro sales order number")],
        customer_number: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        iso_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 chars ISO country code")],
        entry_date: Annotated[StrictStr, Field(description="Order entry date (yyyy-mm-dd)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OrderCancelResponse]:
        """Cancel an Existing Order

        This endpoint is a request to cancel a previously accepted order. Use your Ingram Micro sales order number to cancel an order.   The <strong>orderNumber, isoCountryCode, customerNumber</strong> and <strong>entryDate</strong> parameters are required.   This call must be submitted <strong>before</strong> the order is released to Ingram Micro’s warehouse. The order cannot be canceled once it is released to the warehouse.   Direct ship orders cannot be canceled. Contact your Ingram Micro sales rep for assistance.

        :param ordernumber: Ingram Micro sales order number (required)
        :type ordernumber: str
        :param customer_number: Your unique Ingram Micro customer number (required)
        :type customer_number: str
        :param iso_country_code: 2 chars ISO country code (required)
        :type iso_country_code: str
        :param entry_date: Order entry date (yyyy-mm-dd) (required)
        :type entry_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_orders_order_number_serialize(
            ordernumber=ordernumber,
            customer_number=customer_number,
            iso_country_code=iso_country_code,
            entry_date=entry_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderCancelResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def delete_orders_order_number_without_preload_content(
        self,
        ordernumber: Annotated[StrictStr, Field(description="Ingram Micro sales order number")],
        customer_number: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        iso_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 chars ISO country code")],
        entry_date: Annotated[StrictStr, Field(description="Order entry date (yyyy-mm-dd)")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Cancel an Existing Order

        This endpoint is a request to cancel a previously accepted order. Use your Ingram Micro sales order number to cancel an order.   The <strong>orderNumber, isoCountryCode, customerNumber</strong> and <strong>entryDate</strong> parameters are required.   This call must be submitted <strong>before</strong> the order is released to Ingram Micro’s warehouse. The order cannot be canceled once it is released to the warehouse.   Direct ship orders cannot be canceled. Contact your Ingram Micro sales rep for assistance.

        :param ordernumber: Ingram Micro sales order number (required)
        :type ordernumber: str
        :param customer_number: Your unique Ingram Micro customer number (required)
        :type customer_number: str
        :param iso_country_code: 2 chars ISO country code (required)
        :type iso_country_code: str
        :param entry_date: Order entry date (yyyy-mm-dd) (required)
        :type entry_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_orders_order_number_serialize(
            ordernumber=ordernumber,
            customer_number=customer_number,
            iso_country_code=iso_country_code,
            entry_date=entry_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderCancelResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _delete_orders_order_number_serialize(
        self,
        ordernumber,
        customer_number,
        iso_country_code,
        entry_date,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if ordernumber is not None:
            _path_params['ordernumber'] = ordernumber
        # process the query parameters
        if customer_number is not None:
            
            _query_params.append(('customerNumber', customer_number))
            
        if iso_country_code is not None:
            
            _query_params.append(('isoCountryCode', iso_country_code))
            
        if entry_date is not None:
            
            _query_params.append(('entryDate', entry_date))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/resellers/v5/Orders/{ordernumber}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_orders_search(
        self,
        customer_number: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        isocountrycode: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 char iso country code")],
        ordernumber: Annotated[Optional[StrictStr], Field(description="Ingram sales order number")] = None,
        customerordernumber: Annotated[Optional[StrictStr], Field(description="Search using your PO/Order number")] = None,
        orderstatus: Annotated[Optional[Annotated[str, Field(min_length=1, strict=True)]], Field(description="Ingram Micro order status")] = None,
        startcreatetimestamp: Annotated[Optional[datetime], Field(description="Search start date/time in UTC format")] = None,
        endcreatetimestamp: Annotated[Optional[datetime], Field(description="Search end date/time in UTC format")] = None,
        pagesize: Annotated[Optional[StrictInt], Field(description="Number of records required in the call")] = None,
        pagenumber: Annotated[Optional[StrictInt], Field(description="the page number reference")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OrderSearchResponse:
        """Search your Orders

        Search your Ingram Micro orders. This endpoint searches by multiple order parameters and supports pagination of results. Search using one or more of the parameters below:   <ul><li>ordernumber — Ingram Micro sales order number</li><li>customerordernumber — The PO or order number provided by you when creating an order</li><li>orderstatus — user order status codes for the search, default is set to \"any\"</li><li>startcreatetimestamp and endcreatetimestamp — Order create date range</li></ul>   For pagination, please use these parameters:  <ul><li>pagesize — default 25, max 100</li><li>pagenumber — default 1</li></ul>   Order Status Values:  <ul><li>P – PENDING</li><li>R – RELEASED</li><li>4 – SHIPPED</li><li>I – INVOICED</li><li>V – VOIDED</li></ul>   The search endpoint also returns HATEOAS links for order details and invoice details, if applicable.

        :param customer_number: Your unique Ingram Micro customer number (required)
        :type customer_number: str
        :param isocountrycode: 2 char iso country code (required)
        :type isocountrycode: str
        :param ordernumber: Ingram sales order number
        :type ordernumber: str
        :param customerordernumber: Search using your PO/Order number
        :type customerordernumber: str
        :param orderstatus: Ingram Micro order status
        :type orderstatus: str
        :param startcreatetimestamp: Search start date/time in UTC format
        :type startcreatetimestamp: datetime
        :param endcreatetimestamp: Search end date/time in UTC format
        :type endcreatetimestamp: datetime
        :param pagesize: Number of records required in the call
        :type pagesize: int
        :param pagenumber: the page number reference
        :type pagenumber: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_orders_search_serialize(
            customer_number=customer_number,
            isocountrycode=isocountrycode,
            ordernumber=ordernumber,
            customerordernumber=customerordernumber,
            orderstatus=orderstatus,
            startcreatetimestamp=startcreatetimestamp,
            endcreatetimestamp=endcreatetimestamp,
            pagesize=pagesize,
            pagenumber=pagenumber,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderSearchResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_orders_search_with_http_info(
        self,
        customer_number: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        isocountrycode: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 char iso country code")],
        ordernumber: Annotated[Optional[StrictStr], Field(description="Ingram sales order number")] = None,
        customerordernumber: Annotated[Optional[StrictStr], Field(description="Search using your PO/Order number")] = None,
        orderstatus: Annotated[Optional[Annotated[str, Field(min_length=1, strict=True)]], Field(description="Ingram Micro order status")] = None,
        startcreatetimestamp: Annotated[Optional[datetime], Field(description="Search start date/time in UTC format")] = None,
        endcreatetimestamp: Annotated[Optional[datetime], Field(description="Search end date/time in UTC format")] = None,
        pagesize: Annotated[Optional[StrictInt], Field(description="Number of records required in the call")] = None,
        pagenumber: Annotated[Optional[StrictInt], Field(description="the page number reference")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OrderSearchResponse]:
        """Search your Orders

        Search your Ingram Micro orders. This endpoint searches by multiple order parameters and supports pagination of results. Search using one or more of the parameters below:   <ul><li>ordernumber — Ingram Micro sales order number</li><li>customerordernumber — The PO or order number provided by you when creating an order</li><li>orderstatus — user order status codes for the search, default is set to \"any\"</li><li>startcreatetimestamp and endcreatetimestamp — Order create date range</li></ul>   For pagination, please use these parameters:  <ul><li>pagesize — default 25, max 100</li><li>pagenumber — default 1</li></ul>   Order Status Values:  <ul><li>P – PENDING</li><li>R – RELEASED</li><li>4 – SHIPPED</li><li>I – INVOICED</li><li>V – VOIDED</li></ul>   The search endpoint also returns HATEOAS links for order details and invoice details, if applicable.

        :param customer_number: Your unique Ingram Micro customer number (required)
        :type customer_number: str
        :param isocountrycode: 2 char iso country code (required)
        :type isocountrycode: str
        :param ordernumber: Ingram sales order number
        :type ordernumber: str
        :param customerordernumber: Search using your PO/Order number
        :type customerordernumber: str
        :param orderstatus: Ingram Micro order status
        :type orderstatus: str
        :param startcreatetimestamp: Search start date/time in UTC format
        :type startcreatetimestamp: datetime
        :param endcreatetimestamp: Search end date/time in UTC format
        :type endcreatetimestamp: datetime
        :param pagesize: Number of records required in the call
        :type pagesize: int
        :param pagenumber: the page number reference
        :type pagenumber: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_orders_search_serialize(
            customer_number=customer_number,
            isocountrycode=isocountrycode,
            ordernumber=ordernumber,
            customerordernumber=customerordernumber,
            orderstatus=orderstatus,
            startcreatetimestamp=startcreatetimestamp,
            endcreatetimestamp=endcreatetimestamp,
            pagesize=pagesize,
            pagenumber=pagenumber,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderSearchResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_orders_search_without_preload_content(
        self,
        customer_number: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        isocountrycode: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 char iso country code")],
        ordernumber: Annotated[Optional[StrictStr], Field(description="Ingram sales order number")] = None,
        customerordernumber: Annotated[Optional[StrictStr], Field(description="Search using your PO/Order number")] = None,
        orderstatus: Annotated[Optional[Annotated[str, Field(min_length=1, strict=True)]], Field(description="Ingram Micro order status")] = None,
        startcreatetimestamp: Annotated[Optional[datetime], Field(description="Search start date/time in UTC format")] = None,
        endcreatetimestamp: Annotated[Optional[datetime], Field(description="Search end date/time in UTC format")] = None,
        pagesize: Annotated[Optional[StrictInt], Field(description="Number of records required in the call")] = None,
        pagenumber: Annotated[Optional[StrictInt], Field(description="the page number reference")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Search your Orders

        Search your Ingram Micro orders. This endpoint searches by multiple order parameters and supports pagination of results. Search using one or more of the parameters below:   <ul><li>ordernumber — Ingram Micro sales order number</li><li>customerordernumber — The PO or order number provided by you when creating an order</li><li>orderstatus — user order status codes for the search, default is set to \"any\"</li><li>startcreatetimestamp and endcreatetimestamp — Order create date range</li></ul>   For pagination, please use these parameters:  <ul><li>pagesize — default 25, max 100</li><li>pagenumber — default 1</li></ul>   Order Status Values:  <ul><li>P – PENDING</li><li>R – RELEASED</li><li>4 – SHIPPED</li><li>I – INVOICED</li><li>V – VOIDED</li></ul>   The search endpoint also returns HATEOAS links for order details and invoice details, if applicable.

        :param customer_number: Your unique Ingram Micro customer number (required)
        :type customer_number: str
        :param isocountrycode: 2 char iso country code (required)
        :type isocountrycode: str
        :param ordernumber: Ingram sales order number
        :type ordernumber: str
        :param customerordernumber: Search using your PO/Order number
        :type customerordernumber: str
        :param orderstatus: Ingram Micro order status
        :type orderstatus: str
        :param startcreatetimestamp: Search start date/time in UTC format
        :type startcreatetimestamp: datetime
        :param endcreatetimestamp: Search end date/time in UTC format
        :type endcreatetimestamp: datetime
        :param pagesize: Number of records required in the call
        :type pagesize: int
        :param pagenumber: the page number reference
        :type pagenumber: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_orders_search_serialize(
            customer_number=customer_number,
            isocountrycode=isocountrycode,
            ordernumber=ordernumber,
            customerordernumber=customerordernumber,
            orderstatus=orderstatus,
            startcreatetimestamp=startcreatetimestamp,
            endcreatetimestamp=endcreatetimestamp,
            pagesize=pagesize,
            pagenumber=pagenumber,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderSearchResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_orders_search_serialize(
        self,
        customer_number,
        isocountrycode,
        ordernumber,
        customerordernumber,
        orderstatus,
        startcreatetimestamp,
        endcreatetimestamp,
        pagesize,
        pagenumber,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if customer_number is not None:
            
            _query_params.append(('customerNumber', customer_number))
            
        if isocountrycode is not None:
            
            _query_params.append(('isocountrycode', isocountrycode))
            
        if ordernumber is not None:
            
            _query_params.append(('ordernumber', ordernumber))
            
        if customerordernumber is not None:
            
            _query_params.append(('customerordernumber', customerordernumber))
            
        if orderstatus is not None:
            
            _query_params.append(('orderstatus', orderstatus))
            
        if startcreatetimestamp is not None:
            if isinstance(startcreatetimestamp, datetime):
                _query_params.append(
                    (
                        'startcreatetimestamp',
                        startcreatetimestamp.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('startcreatetimestamp', startcreatetimestamp))
            
        if endcreatetimestamp is not None:
            if isinstance(endcreatetimestamp, datetime):
                _query_params.append(
                    (
                        'endcreatetimestamp',
                        endcreatetimestamp.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('endcreatetimestamp', endcreatetimestamp))
            
        if pagesize is not None:
            
            _query_params.append(('pagesize', pagesize))
            
        if pagenumber is not None:
            
            _query_params.append(('pagenumber', pagenumber))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v5/Orders/search',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_v5_orders_details(
        self,
        ordernumber: Annotated[StrictStr, Field(description="Ingram Micro sales order number")],
        customernumber: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        isocountrycode: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 chars ISO country code")],
        customerordernumber: Annotated[Optional[StrictStr], Field(description="Your PO/Order Number provide at the time of order creation")] = None,
        startcreatetimestamp: Annotated[Optional[date], Field(description="Filter start date - format YYYY-MM-DD")] = None,
        endcreatetimestamp: Annotated[Optional[StrictStr], Field(description="Filter end date - format YYYY-MM-DD")] = None,
        simulate: Annotated[Optional[StrictStr], Field(description="Order response for various order statuses. Not for use in production.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OrderDetailResponse:
        """Get Order Details

        Use your Ingram Micro sales order number to search for existing orders or retrieve existing order details.   <b>The sales order number, customer number and isoCountryCode are required parameters.</b>   The sales order number is returned in the Order Create POST response. Ingram Micro recommends that you save this number for future uses.   The IM sales order number can also be retrieved by searching for your existing order using the Order Search GET endpoint. You will need the customer PO number or order number that was provided at the time of order creation.   In a case when the IM sales order number is repeated, you can refine the result by providing customer order number for additional filtering or using the date range to filter orders by creation date.   Use the \"simulate\" query parameter to test the GET order response for various order statuses. This parameter is only available in the sandbox to help with development and testing of the GET order endpoint.

        :param ordernumber: Ingram Micro sales order number (required)
        :type ordernumber: str
        :param customernumber: Your unique Ingram Micro customer number (required)
        :type customernumber: str
        :param isocountrycode: 2 chars ISO country code (required)
        :type isocountrycode: str
        :param customerordernumber: Your PO/Order Number provide at the time of order creation
        :type customerordernumber: str
        :param startcreatetimestamp: Filter start date - format YYYY-MM-DD
        :type startcreatetimestamp: date
        :param endcreatetimestamp: Filter end date - format YYYY-MM-DD
        :type endcreatetimestamp: str
        :param simulate: Order response for various order statuses. Not for use in production.
        :type simulate: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_v5_orders_details_serialize(
            ordernumber=ordernumber,
            customernumber=customernumber,
            isocountrycode=isocountrycode,
            customerordernumber=customerordernumber,
            startcreatetimestamp=startcreatetimestamp,
            endcreatetimestamp=endcreatetimestamp,
            simulate=simulate,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderDetailResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_v5_orders_details_with_http_info(
        self,
        ordernumber: Annotated[StrictStr, Field(description="Ingram Micro sales order number")],
        customernumber: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        isocountrycode: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 chars ISO country code")],
        customerordernumber: Annotated[Optional[StrictStr], Field(description="Your PO/Order Number provide at the time of order creation")] = None,
        startcreatetimestamp: Annotated[Optional[date], Field(description="Filter start date - format YYYY-MM-DD")] = None,
        endcreatetimestamp: Annotated[Optional[StrictStr], Field(description="Filter end date - format YYYY-MM-DD")] = None,
        simulate: Annotated[Optional[StrictStr], Field(description="Order response for various order statuses. Not for use in production.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OrderDetailResponse]:
        """Get Order Details

        Use your Ingram Micro sales order number to search for existing orders or retrieve existing order details.   <b>The sales order number, customer number and isoCountryCode are required parameters.</b>   The sales order number is returned in the Order Create POST response. Ingram Micro recommends that you save this number for future uses.   The IM sales order number can also be retrieved by searching for your existing order using the Order Search GET endpoint. You will need the customer PO number or order number that was provided at the time of order creation.   In a case when the IM sales order number is repeated, you can refine the result by providing customer order number for additional filtering or using the date range to filter orders by creation date.   Use the \"simulate\" query parameter to test the GET order response for various order statuses. This parameter is only available in the sandbox to help with development and testing of the GET order endpoint.

        :param ordernumber: Ingram Micro sales order number (required)
        :type ordernumber: str
        :param customernumber: Your unique Ingram Micro customer number (required)
        :type customernumber: str
        :param isocountrycode: 2 chars ISO country code (required)
        :type isocountrycode: str
        :param customerordernumber: Your PO/Order Number provide at the time of order creation
        :type customerordernumber: str
        :param startcreatetimestamp: Filter start date - format YYYY-MM-DD
        :type startcreatetimestamp: date
        :param endcreatetimestamp: Filter end date - format YYYY-MM-DD
        :type endcreatetimestamp: str
        :param simulate: Order response for various order statuses. Not for use in production.
        :type simulate: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_v5_orders_details_serialize(
            ordernumber=ordernumber,
            customernumber=customernumber,
            isocountrycode=isocountrycode,
            customerordernumber=customerordernumber,
            startcreatetimestamp=startcreatetimestamp,
            endcreatetimestamp=endcreatetimestamp,
            simulate=simulate,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderDetailResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_v5_orders_details_without_preload_content(
        self,
        ordernumber: Annotated[StrictStr, Field(description="Ingram Micro sales order number")],
        customernumber: Annotated[StrictStr, Field(description="Your unique Ingram Micro customer number")],
        isocountrycode: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="2 chars ISO country code")],
        customerordernumber: Annotated[Optional[StrictStr], Field(description="Your PO/Order Number provide at the time of order creation")] = None,
        startcreatetimestamp: Annotated[Optional[date], Field(description="Filter start date - format YYYY-MM-DD")] = None,
        endcreatetimestamp: Annotated[Optional[StrictStr], Field(description="Filter end date - format YYYY-MM-DD")] = None,
        simulate: Annotated[Optional[StrictStr], Field(description="Order response for various order statuses. Not for use in production.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Order Details

        Use your Ingram Micro sales order number to search for existing orders or retrieve existing order details.   <b>The sales order number, customer number and isoCountryCode are required parameters.</b>   The sales order number is returned in the Order Create POST response. Ingram Micro recommends that you save this number for future uses.   The IM sales order number can also be retrieved by searching for your existing order using the Order Search GET endpoint. You will need the customer PO number or order number that was provided at the time of order creation.   In a case when the IM sales order number is repeated, you can refine the result by providing customer order number for additional filtering or using the date range to filter orders by creation date.   Use the \"simulate\" query parameter to test the GET order response for various order statuses. This parameter is only available in the sandbox to help with development and testing of the GET order endpoint.

        :param ordernumber: Ingram Micro sales order number (required)
        :type ordernumber: str
        :param customernumber: Your unique Ingram Micro customer number (required)
        :type customernumber: str
        :param isocountrycode: 2 chars ISO country code (required)
        :type isocountrycode: str
        :param customerordernumber: Your PO/Order Number provide at the time of order creation
        :type customerordernumber: str
        :param startcreatetimestamp: Filter start date - format YYYY-MM-DD
        :type startcreatetimestamp: date
        :param endcreatetimestamp: Filter end date - format YYYY-MM-DD
        :type endcreatetimestamp: str
        :param simulate: Order response for various order statuses. Not for use in production.
        :type simulate: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_v5_orders_details_serialize(
            ordernumber=ordernumber,
            customernumber=customernumber,
            isocountrycode=isocountrycode,
            customerordernumber=customerordernumber,
            startcreatetimestamp=startcreatetimestamp,
            endcreatetimestamp=endcreatetimestamp,
            simulate=simulate,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderDetailResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_v5_orders_details_serialize(
        self,
        ordernumber,
        customernumber,
        isocountrycode,
        customerordernumber,
        startcreatetimestamp,
        endcreatetimestamp,
        simulate,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if ordernumber is not None:
            _path_params['ordernumber'] = ordernumber
        # process the query parameters
        if customernumber is not None:
            
            _query_params.append(('customernumber', customernumber))
            
        if isocountrycode is not None:
            
            _query_params.append(('isocountrycode', isocountrycode))
            
        if customerordernumber is not None:
            
            _query_params.append(('customerordernumber', customerordernumber))
            
        if startcreatetimestamp is not None:
            if isinstance(startcreatetimestamp, date):
                _query_params.append(
                    (
                        'startcreatetimestamp',
                        startcreatetimestamp.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('startcreatetimestamp', startcreatetimestamp))
            
        if endcreatetimestamp is not None:
            
            _query_params.append(('endcreatetimestamp', endcreatetimestamp))
            
        if simulate is not None:
            
            _query_params.append(('simulate', simulate))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v5/Orders/{ordernumber}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def post_v5_orders_create(
        self,
        order_create_request: Optional[OrderCreateRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OrderCreateResponse:
        """Create a New Order

        Instantly create and place orders. The POST API supports stocked SKUs as well as licensing and warranties SKUs.   Every order to be created with this API must complete these validations to be placed and processed:<ul><li>SKU, shipping address, product authorization and stock allocations must clear validation.</li><li>Ingram Micro Sales validates pricing, stock or other processing parameters. Ingram Micro sales may place an order a hold if revision is necessary.</li><li>Credit validation confirms available credit prior to processing an order. If an order does not clear credit validation, the Ingram Micro sales rep or accounts receivable manager will contact you for next steps.</li><li>Warehouse validation selects the location closest to the destination zip code. If the stock is not available in any of the warehouses, Ingram Micro places a backorder in the warehouse closest to the destination zip code.</li></ul>   Ingram Micro recommends that you provide the <strong>ingrampartnumber</strong> for each SKU contained in each order.   When using <strong>vendorpartnumber</strong> to place an order, please use the product search endpoint to find the <strong>ingrampartnumber</strong> for a specific <strong>vendorpartnumber</strong>, and then supply the <strong>ingrampartnumber</strong> to place an order.   <strong>NOTE:</strong> You must have net terms to use the <strong>Ingram Micro Order Create API</strong>. Ingram Micro offers trade credit when using our APIs, and repayment is based on net terms. For example, if your net terms agreement is net-30, you will have 30 days to make a full payment. Ingram Micro does not allow credit card transactions for API ordering.

        :param order_create_request:
        :type order_create_request: OrderCreateRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_v5_orders_create_serialize(
            order_create_request=order_create_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderCreateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def post_v5_orders_create_with_http_info(
        self,
        order_create_request: Optional[OrderCreateRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OrderCreateResponse]:
        """Create a New Order

        Instantly create and place orders. The POST API supports stocked SKUs as well as licensing and warranties SKUs.   Every order to be created with this API must complete these validations to be placed and processed:<ul><li>SKU, shipping address, product authorization and stock allocations must clear validation.</li><li>Ingram Micro Sales validates pricing, stock or other processing parameters. Ingram Micro sales may place an order a hold if revision is necessary.</li><li>Credit validation confirms available credit prior to processing an order. If an order does not clear credit validation, the Ingram Micro sales rep or accounts receivable manager will contact you for next steps.</li><li>Warehouse validation selects the location closest to the destination zip code. If the stock is not available in any of the warehouses, Ingram Micro places a backorder in the warehouse closest to the destination zip code.</li></ul>   Ingram Micro recommends that you provide the <strong>ingrampartnumber</strong> for each SKU contained in each order.   When using <strong>vendorpartnumber</strong> to place an order, please use the product search endpoint to find the <strong>ingrampartnumber</strong> for a specific <strong>vendorpartnumber</strong>, and then supply the <strong>ingrampartnumber</strong> to place an order.   <strong>NOTE:</strong> You must have net terms to use the <strong>Ingram Micro Order Create API</strong>. Ingram Micro offers trade credit when using our APIs, and repayment is based on net terms. For example, if your net terms agreement is net-30, you will have 30 days to make a full payment. Ingram Micro does not allow credit card transactions for API ordering.

        :param order_create_request:
        :type order_create_request: OrderCreateRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_v5_orders_create_serialize(
            order_create_request=order_create_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderCreateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def post_v5_orders_create_without_preload_content(
        self,
        order_create_request: Optional[OrderCreateRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create a New Order

        Instantly create and place orders. The POST API supports stocked SKUs as well as licensing and warranties SKUs.   Every order to be created with this API must complete these validations to be placed and processed:<ul><li>SKU, shipping address, product authorization and stock allocations must clear validation.</li><li>Ingram Micro Sales validates pricing, stock or other processing parameters. Ingram Micro sales may place an order a hold if revision is necessary.</li><li>Credit validation confirms available credit prior to processing an order. If an order does not clear credit validation, the Ingram Micro sales rep or accounts receivable manager will contact you for next steps.</li><li>Warehouse validation selects the location closest to the destination zip code. If the stock is not available in any of the warehouses, Ingram Micro places a backorder in the warehouse closest to the destination zip code.</li></ul>   Ingram Micro recommends that you provide the <strong>ingrampartnumber</strong> for each SKU contained in each order.   When using <strong>vendorpartnumber</strong> to place an order, please use the product search endpoint to find the <strong>ingrampartnumber</strong> for a specific <strong>vendorpartnumber</strong>, and then supply the <strong>ingrampartnumber</strong> to place an order.   <strong>NOTE:</strong> You must have net terms to use the <strong>Ingram Micro Order Create API</strong>. Ingram Micro offers trade credit when using our APIs, and repayment is based on net terms. For example, if your net terms agreement is net-30, you will have 30 days to make a full payment. Ingram Micro does not allow credit card transactions for API ordering.

        :param order_create_request:
        :type order_create_request: OrderCreateRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_v5_orders_create_serialize(
            order_create_request=order_create_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OrderCreateResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _post_v5_orders_create_serialize(
        self,
        order_create_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if order_create_request is not None:
            _body_params = order_create_request


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/resellers/v5/Orders',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


