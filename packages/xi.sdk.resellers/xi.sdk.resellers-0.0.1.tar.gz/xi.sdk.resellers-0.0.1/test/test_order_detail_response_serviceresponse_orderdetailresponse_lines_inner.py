# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from xi.sdk.resellers.models.order_detail_response_serviceresponse_orderdetailresponse_lines_inner import OrderDetailResponseServiceresponseOrderdetailresponseLinesInner

class TestOrderDetailResponseServiceresponseOrderdetailresponseLinesInner(unittest.TestCase):
    """OrderDetailResponseServiceresponseOrderdetailresponseLinesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderDetailResponseServiceresponseOrderdetailresponseLinesInner:
        """Test OrderDetailResponseServiceresponseOrderdetailresponseLinesInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderDetailResponseServiceresponseOrderdetailresponseLinesInner`
        """
        model = OrderDetailResponseServiceresponseOrderdetailresponseLinesInner()
        if include_optional:
            return OrderDetailResponseServiceresponseOrderdetailresponseLinesInner(
                linenumber = '',
                globallinenumber = '',
                ordersuffix = '',
                erpordernumber = '',
                linestatus = '',
                partnumber = '',
                manufacturerpartnumber = '',
                vendorname = '',
                vendorcode = '',
                partdescription1 = '',
                partdescription2 = '',
                unitweight = '',
                unitprice = 1.337,
                extendedprice = 1.337,
                taxamount = 1.337,
                requestedquantity = '',
                confirmedquantity = '',
                backorderquantity = '',
                serialnumberdetails = [
                    xi.sdk.resellers.models.order_detail_response_serviceresponse_orderdetailresponse_lines_inner_serialnumberdetails_inner.orderDetailResponse_serviceresponse_orderdetailresponse_lines_inner_serialnumberdetails_inner(
                        serialnumber = '', )
                    ],
                trackingnumber = [
                    ''
                    ],
                shipmentdetails = [
                    xi.sdk.resellers.models.order_detail_response_serviceresponse_orderdetailresponse_lines_inner_shipmentdetails_inner.orderDetailResponse_serviceresponse_orderdetailresponse_lines_inner_shipmentdetails_inner(
                        quantity = 1.337, 
                        shipmentdate = '', 
                        shipfromwarehouseid = '', 
                        warehousename = '', 
                        invoicenumber = '', 
                        invoicedate = '', 
                        status = '', 
                        statusdescription = '', 
                        shippeddate = '', 
                        holdreasoncodedescription = '', 
                        ponumber = '', 
                        carriertype = '', 
                        carriercode = '', 
                        carriername = '', 
                        pronumber = '', 
                        packagedetails = xi.sdk.resellers.models.order_detail_response_serviceresponse_orderdetailresponse_lines_inner_shipmentdetails_inner_packagedetails.orderDetailResponse_serviceresponse_orderdetailresponse_lines_inner_shipmentdetails_inner_packagedetails(
                            trackingnumber = '', 
                            packageweight = '', 
                            cartonnumber = '', 
                            quantityinbox = '', ), )
                    ],
                productextendedspecs = [
                    xi.sdk.resellers.models.invoice_detail_response_serviceresponse_invoicedetailresponse_extendedspecs_inner.InvoiceDetailResponse_serviceresponse_invoicedetailresponse_extendedspecs_inner(
                        attributename = '', 
                        attributevalue = '', )
                    ],
                backorderetadate = ''
            )
        else:
            return OrderDetailResponseServiceresponseOrderdetailresponseLinesInner(
        )
        """

    def testOrderDetailResponseServiceresponseOrderdetailresponseLinesInner(self):
        """Test OrderDetailResponseServiceresponseOrderdetailresponseLinesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
