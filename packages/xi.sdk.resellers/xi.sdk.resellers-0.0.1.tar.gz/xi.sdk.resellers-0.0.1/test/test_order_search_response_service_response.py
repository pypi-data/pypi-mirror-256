# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from xi.sdk.resellers.models.order_search_response_service_response import OrderSearchResponseServiceResponse

class TestOrderSearchResponseServiceResponse(unittest.TestCase):
    """OrderSearchResponseServiceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderSearchResponseServiceResponse:
        """Test OrderSearchResponseServiceResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderSearchResponseServiceResponse`
        """
        model = OrderSearchResponseServiceResponse()
        if include_optional:
            return OrderSearchResponseServiceResponse(
                responsepreamble = xi.sdk.resellers.models.order_search_response_service_response_responsepreamble.orderSearchResponse_serviceResponse_responsepreamble(
                    requeststatus = '', 
                    returnmessage = '', ),
                ordersearchresponse = xi.sdk.resellers.models.order_search_response_service_response_ordersearchresponse.orderSearchResponse_serviceResponse_ordersearchresponse(
                    ordersfound = '', 
                    pagesize = '', 
                    pagenumber = '', 
                    orders = [
                        xi.sdk.resellers.models.order_search_response_service_response_ordersearchresponse_orders_inner.orderSearchResponse_serviceResponse_ordersearchresponse_orders_inner(
                            ordernumber = '', 
                            entrytimestamp = '', 
                            customerordernumber = '', 
                            suborders = [
                                xi.sdk.resellers.models.order_search_response_service_response_ordersearchresponse_orders_inner_suborders_inner.orderSearchResponse_serviceResponse_ordersearchresponse_orders_inner_suborders_inner(
                                    subordernumber = '', 
                                    statuscode = '', 
                                    status = '', 
                                    holdreasoncode = '', 
                                    holdreason = '', 
                                    links = [
                                        xi.sdk.resellers.models.order_search_response_service_response_ordersearchresponse_orders_inner_suborders_inner_links_inner.orderSearchResponse_serviceResponse_ordersearchresponse_orders_inner_suborders_inner_links_inner(
                                            topic = 'orders', 
                                            href = '', 
                                            type = 'GET', )
                                        ], )
                                ], 
                            links = xi.sdk.resellers.models.order_search_response_service_response_ordersearchresponse_orders_inner_links.orderSearchResponse_serviceResponse_ordersearchresponse_orders_inner_links(
                                topic = 'orders', 
                                href = '', 
                                type = 'GET', ), )
                        ], )
            )
        else:
            return OrderSearchResponseServiceResponse(
        )
        """

    def testOrderSearchResponseServiceResponse(self):
        """Test OrderSearchResponseServiceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
