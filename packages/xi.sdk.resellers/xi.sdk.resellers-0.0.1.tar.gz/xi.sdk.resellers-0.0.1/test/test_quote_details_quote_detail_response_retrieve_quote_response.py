# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from xi.sdk.resellers.models.quote_details_quote_detail_response_retrieve_quote_response import QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse

class TestQuoteDetailsQuoteDetailResponseRetrieveQuoteResponse(unittest.TestCase):
    """QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse:
        """Test QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse`
        """
        model = QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse()
        if include_optional:
            return QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse(
                quote_guid = '',
                quote_name = '',
                quote_number = '',
                quote_expiry_date = 'Wed Jan 01 00:00:00 UTC 2020',
                revision_number = '',
                intro_preamble = '',
                purchase_instructions = '',
                legal_terms = '',
                currency_code = '',
                price_deviation_id = '',
                price_deviation_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                price_deviation_expiry_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                customer_need = '',
                solution_proposed = '',
                status = '',
                created = 'Fri Oct 04 00:00:00 UTC 2019',
                modified = 'Fri Oct 04 00:00:00 UTC 2019',
                leasing_calculations = '',
                leasing_instructions = '',
                account_info = xi.sdk.resellers.models.quote_details_quote_detail_response_retrieve_quote_response_account_info.quoteDetails_quoteDetailResponse_retrieveQuoteResponse_accountInfo(
                    account_name = '', 
                    bcn = '', 
                    phone = '', ),
                contact_info = xi.sdk.resellers.models.quote_details_quote_detail_response_retrieve_quote_response_contact_info.quoteDetails_quoteDetailResponse_retrieveQuoteResponse_contactInfo(
                    contact_email = '', 
                    contact_name = '', ),
                vendor_attributes = xi.sdk.resellers.models.quote_details_quote_detail_response_retrieve_quote_response_vendor_attributes.quoteDetails_quoteDetailResponse_retrieveQuoteResponse_vendorAttributes(
                    estimate_id = '', 
                    deal_id = '', 
                    vendor_name = '', 
                    vendor_setting_message = '', ),
                end_user = xi.sdk.resellers.models.quote_details_quote_detail_response_retrieve_quote_response_end_user.quoteDetails_quoteDetailResponse_retrieveQuoteResponse_endUser(
                    end_user_name = '', 
                    end_user_address = '', 
                    end_user_address2 = '', 
                    end_user_address3 = '', 
                    end_user_city = '', 
                    end_user_state = '', 
                    end_user_email = '', 
                    end_user_phone = '', 
                    end_user_zip_code = '', 
                    end_user_contact_name = '', 
                    end_user_market_segment = '', )
            )
        else:
            return QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse(
        )
        """

    def testQuoteDetailsQuoteDetailResponseRetrieveQuoteResponse(self):
        """Test QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
